// source: inventory/inventory.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var common_pagination_pb = require('../common/pagination_pb.js');
goog.object.extend(proto, common_pagination_pb);
var common_rarity_pb = require('../common/rarity_pb.js');
goog.object.extend(proto, common_rarity_pb);
goog.exportSymbol('proto.inventory.v1.AckStreamMessagesRequest', null, global);
goog.exportSymbol('proto.inventory.v1.AckStreamMessagesResponse', null, global);
goog.exportSymbol('proto.inventory.v1.AddGroupRequest', null, global);
goog.exportSymbol('proto.inventory.v1.AddGroupResponse', null, global);
goog.exportSymbol('proto.inventory.v1.ConsumeItemRequest', null, global);
goog.exportSymbol('proto.inventory.v1.ConsumeItemResponse', null, global);
goog.exportSymbol('proto.inventory.v1.GenerateRequest', null, global);
goog.exportSymbol('proto.inventory.v1.GenerateResponse', null, global);
goog.exportSymbol('proto.inventory.v1.GetItemRequest', null, global);
goog.exportSymbol('proto.inventory.v1.Item', null, global);
goog.exportSymbol('proto.inventory.v1.ListItemsByItemDefRequest', null, global);
goog.exportSymbol('proto.inventory.v1.ListItemsRequest', null, global);
goog.exportSymbol('proto.inventory.v1.ListItemsResponse', null, global);
goog.exportSymbol('proto.inventory.v1.StreamItemOpType', null, global);
goog.exportSymbol('proto.inventory.v1.StreamItemRequest', null, global);
goog.exportSymbol('proto.inventory.v1.StreamItemResponse', null, global);
goog.exportSymbol('proto.inventory.v1.StreamItemTransfersAckRequest', null, global);
goog.exportSymbol('proto.inventory.v1.StreamItemTransfersAckResponse', null, global);
goog.exportSymbol('proto.inventory.v1.StreamItemTransfersRequest', null, global);
goog.exportSymbol('proto.inventory.v1.StreamItemTransfersResponse', null, global);
goog.exportSymbol('proto.inventory.v1.StreamType', null, global);
goog.exportSymbol('proto.inventory.v1.TransferItemRequest', null, global);
goog.exportSymbol('proto.inventory.v1.TransferItemResponse', null, global);
goog.exportSymbol('proto.inventory.v1.UnpackRequest', null, global);
goog.exportSymbol('proto.inventory.v1.UnpackResponse', null, global);
goog.exportSymbol('proto.inventory.v1.UpdateItemRequest', null, global);
goog.exportSymbol('proto.inventory.v1.UpdateItemResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.Item.displayName = 'proto.inventory.v1.Item';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.GetItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.GetItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.GetItemRequest.displayName = 'proto.inventory.v1.GetItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.ListItemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.inventory.v1.ListItemsRequest.repeatedFields_, null);
};
goog.inherits(proto.inventory.v1.ListItemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.ListItemsRequest.displayName = 'proto.inventory.v1.ListItemsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.ListItemsByItemDefRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.inventory.v1.ListItemsByItemDefRequest.repeatedFields_, null);
};
goog.inherits(proto.inventory.v1.ListItemsByItemDefRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.ListItemsByItemDefRequest.displayName = 'proto.inventory.v1.ListItemsByItemDefRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.ListItemsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.inventory.v1.ListItemsResponse.repeatedFields_, null);
};
goog.inherits(proto.inventory.v1.ListItemsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.ListItemsResponse.displayName = 'proto.inventory.v1.ListItemsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.ConsumeItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.ConsumeItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.ConsumeItemRequest.displayName = 'proto.inventory.v1.ConsumeItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.ConsumeItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.ConsumeItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.ConsumeItemResponse.displayName = 'proto.inventory.v1.ConsumeItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.UnpackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.UnpackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.UnpackRequest.displayName = 'proto.inventory.v1.UnpackRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.UnpackResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.inventory.v1.UnpackResponse.repeatedFields_, null);
};
goog.inherits(proto.inventory.v1.UnpackResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.UnpackResponse.displayName = 'proto.inventory.v1.UnpackResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.GenerateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.GenerateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.GenerateRequest.displayName = 'proto.inventory.v1.GenerateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.GenerateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.GenerateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.GenerateResponse.displayName = 'proto.inventory.v1.GenerateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.UpdateItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.UpdateItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.UpdateItemRequest.displayName = 'proto.inventory.v1.UpdateItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.UpdateItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.UpdateItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.UpdateItemResponse.displayName = 'proto.inventory.v1.UpdateItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.TransferItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.TransferItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.TransferItemRequest.displayName = 'proto.inventory.v1.TransferItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.TransferItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.TransferItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.TransferItemResponse.displayName = 'proto.inventory.v1.TransferItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.StreamItemTransfersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.StreamItemTransfersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.StreamItemTransfersRequest.displayName = 'proto.inventory.v1.StreamItemTransfersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.StreamItemTransfersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.StreamItemTransfersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.StreamItemTransfersResponse.displayName = 'proto.inventory.v1.StreamItemTransfersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.StreamItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.StreamItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.StreamItemRequest.displayName = 'proto.inventory.v1.StreamItemRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.StreamItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.StreamItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.StreamItemResponse.displayName = 'proto.inventory.v1.StreamItemResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.AddGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.AddGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.AddGroupRequest.displayName = 'proto.inventory.v1.AddGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.AddGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.AddGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.AddGroupResponse.displayName = 'proto.inventory.v1.AddGroupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.StreamItemTransfersAckRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.inventory.v1.StreamItemTransfersAckRequest.repeatedFields_, null);
};
goog.inherits(proto.inventory.v1.StreamItemTransfersAckRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.StreamItemTransfersAckRequest.displayName = 'proto.inventory.v1.StreamItemTransfersAckRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.StreamItemTransfersAckResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.StreamItemTransfersAckResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.StreamItemTransfersAckResponse.displayName = 'proto.inventory.v1.StreamItemTransfersAckResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.AckStreamMessagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.inventory.v1.AckStreamMessagesRequest.repeatedFields_, null);
};
goog.inherits(proto.inventory.v1.AckStreamMessagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.AckStreamMessagesRequest.displayName = 'proto.inventory.v1.AckStreamMessagesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.inventory.v1.AckStreamMessagesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.inventory.v1.AckStreamMessagesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.inventory.v1.AckStreamMessagesResponse.displayName = 'proto.inventory.v1.AckStreamMessagesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
itemDefId: jspb.Message.getFieldWithDefault(msg, 1, ""),
accountId: jspb.Message.getFieldWithDefault(msg, 2, 0),
itemId: jspb.Message.getFieldWithDefault(msg, 3, ""),
appId: jspb.Message.getFieldWithDefault(msg, 4, 0),
name: jspb.Message.getFieldWithDefault(msg, 5, ""),
description: jspb.Message.getFieldWithDefault(msg, 6, ""),
iconUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
tags: jspb.Message.getFieldWithDefault(msg, 8, ""),
tradable: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
quantity: jspb.Message.getFieldWithDefault(msg, 10, 0),
type: jspb.Message.getFieldWithDefault(msg, 11, ""),
displayType: jspb.Message.getFieldWithDefault(msg, 12, ""),
marketable: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
appFiles: jspb.Message.getFieldWithDefault(msg, 14, ""),
collection: jspb.Message.getFieldWithDefault(msg, 15, ""),
hidden: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
gameOnly: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
createdAt: jspb.Message.getFieldWithDefault(msg, 18, ""),
updatedAt: jspb.Message.getFieldWithDefault(msg, 19, ""),
appMeta: jspb.Message.getFieldWithDefault(msg, 20, ""),
serial: jspb.Message.getFieldWithDefault(msg, 21, 0),
supply: jspb.Message.getFieldWithDefault(msg, 22, 0),
defaultTags: jspb.Message.getFieldWithDefault(msg, 23, ""),
rarity: jspb.Message.getFieldWithDefault(msg, 24, 0),
issued: jspb.Message.getFieldWithDefault(msg, 25, 0),
holdTill: jspb.Message.getFieldWithDefault(msg, 26, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.Item}
 */
proto.inventory.v1.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.Item;
  return proto.inventory.v1.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.Item}
 */
proto.inventory.v1.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemDefId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAppId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTradable(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayType(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMarketable(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppFiles(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHidden(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGameOnly(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppMeta(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSerial(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSupply(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultTags(value);
      break;
    case 24:
      var value = /** @type {!proto.common.v1.Rarity} */ (reader.readEnum());
      msg.setRarity(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIssued(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHoldTill(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemDefId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAppId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIconUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTags();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTradable();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getDisplayType();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMarketable();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getAppFiles();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getHidden();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getGameOnly();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getAppMeta();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getSerial();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = message.getSupply();
  if (f !== 0) {
    writer.writeInt64(
      22,
      f
    );
  }
  f = message.getDefaultTags();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getRarity();
  if (f !== 0.0) {
    writer.writeEnum(
      24,
      f
    );
  }
  f = message.getIssued();
  if (f !== 0) {
    writer.writeInt64(
      25,
      f
    );
  }
  f = message.getHoldTill();
  if (f !== 0) {
    writer.writeInt64(
      26,
      f
    );
  }
};


/**
 * optional string item_def_id = 1;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getItemDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setItemDefId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 account_id = 2;
 * @return {number}
 */
proto.inventory.v1.Item.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string item_id = 3;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 app_id = 4;
 * @return {number}
 */
proto.inventory.v1.Item.prototype.getAppId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setAppId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string icon_url = 7;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getIconUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setIconUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string tags = 8;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setTags = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool tradable = 9;
 * @return {boolean}
 */
proto.inventory.v1.Item.prototype.getTradable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setTradable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int32 quantity = 10;
 * @return {number}
 */
proto.inventory.v1.Item.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string type = 11;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string display_type = 12;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getDisplayType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setDisplayType = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool marketable = 13;
 * @return {boolean}
 */
proto.inventory.v1.Item.prototype.getMarketable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setMarketable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional string app_files = 14;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getAppFiles = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setAppFiles = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string collection = 15;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional bool hidden = 16;
 * @return {boolean}
 */
proto.inventory.v1.Item.prototype.getHidden = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setHidden = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool game_only = 17;
 * @return {boolean}
 */
proto.inventory.v1.Item.prototype.getGameOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setGameOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional string created_at = 18;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string updated_at = 19;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string app_meta = 20;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getAppMeta = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setAppMeta = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional int64 serial = 21;
 * @return {number}
 */
proto.inventory.v1.Item.prototype.getSerial = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setSerial = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int64 supply = 22;
 * @return {number}
 */
proto.inventory.v1.Item.prototype.getSupply = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setSupply = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional string default_tags = 23;
 * @return {string}
 */
proto.inventory.v1.Item.prototype.getDefaultTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setDefaultTags = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional common.v1.Rarity rarity = 24;
 * @return {!proto.common.v1.Rarity}
 */
proto.inventory.v1.Item.prototype.getRarity = function() {
  return /** @type {!proto.common.v1.Rarity} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {!proto.common.v1.Rarity} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setRarity = function(value) {
  return jspb.Message.setProto3EnumField(this, 24, value);
};


/**
 * optional int64 issued = 25;
 * @return {number}
 */
proto.inventory.v1.Item.prototype.getIssued = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setIssued = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int64 hold_till = 26;
 * @return {number}
 */
proto.inventory.v1.Item.prototype.getHoldTill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.Item} returns this
 */
proto.inventory.v1.Item.prototype.setHoldTill = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.GetItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.GetItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.GetItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.GetItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
itemId: jspb.Message.getFieldWithDefault(msg, 1, ""),
appId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.GetItemRequest}
 */
proto.inventory.v1.GetItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.GetItemRequest;
  return proto.inventory.v1.GetItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.GetItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.GetItemRequest}
 */
proto.inventory.v1.GetItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAppId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.GetItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.GetItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.GetItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.GetItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string item_id = 1;
 * @return {string}
 */
proto.inventory.v1.GetItemRequest.prototype.getItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.GetItemRequest} returns this
 */
proto.inventory.v1.GetItemRequest.prototype.setItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 app_id = 2;
 * @return {number}
 */
proto.inventory.v1.GetItemRequest.prototype.getAppId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.GetItemRequest} returns this
 */
proto.inventory.v1.GetItemRequest.prototype.setAppId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.inventory.v1.ListItemsRequest.repeatedFields_ = [14,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.ListItemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.ListItemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.ListItemsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.ListItemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
accountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
itemDefId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
collection: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
name: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
rarity: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
type: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
displayType: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
hidden: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
gameonly: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
storeHidden: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
tradable: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
sortFieldsList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
directionsList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.ListItemsRequest}
 */
proto.inventory.v1.ListItemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.ListItemsRequest;
  return proto.inventory.v1.ListItemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.ListItemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.ListItemsRequest}
 */
proto.inventory.v1.ListItemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemDefId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {!proto.common.v1.Rarity} */ (reader.readEnum());
      msg.setRarity(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayType(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHidden(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGameonly(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStoreHidden(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTradable(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addSortFields(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addDirections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.ListItemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.ListItemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.ListItemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.ListItemsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {!proto.common.v1.Rarity} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getSortFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getDirectionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
};


/**
 * optional int64 account_id = 1;
 * @return {number}
 */
proto.inventory.v1.ListItemsRequest.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.inventory.v1.ListItemsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 offset = 3;
 * @return {number}
 */
proto.inventory.v1.ListItemsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string item_def_id = 4;
 * @return {string}
 */
proto.inventory.v1.ListItemsRequest.prototype.getItemDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setItemDefId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.clearItemDefId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.hasItemDefId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string collection = 5;
 * @return {string}
 */
proto.inventory.v1.ListItemsRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setCollection = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.clearCollection = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.hasCollection = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.inventory.v1.ListItemsRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setName = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.clearName = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional common.v1.Rarity rarity = 7;
 * @return {!proto.common.v1.Rarity}
 */
proto.inventory.v1.ListItemsRequest.prototype.getRarity = function() {
  return /** @type {!proto.common.v1.Rarity} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.common.v1.Rarity} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setRarity = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.clearRarity = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.hasRarity = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string type = 8;
 * @return {string}
 */
proto.inventory.v1.ListItemsRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setType = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.clearType = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.hasType = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string display_type = 9;
 * @return {string}
 */
proto.inventory.v1.ListItemsRequest.prototype.getDisplayType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setDisplayType = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.clearDisplayType = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.hasDisplayType = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool hidden = 10;
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.getHidden = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setHidden = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.clearHidden = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.hasHidden = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool gameOnly = 11;
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.getGameonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setGameonly = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.clearGameonly = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.hasGameonly = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool store_hidden = 12;
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.getStoreHidden = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setStoreHidden = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.clearStoreHidden = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.hasStoreHidden = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool tradable = 13;
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.getTradable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setTradable = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.clearTradable = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.ListItemsRequest.prototype.hasTradable = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated string sort_fields = 14;
 * @return {!Array<string>}
 */
proto.inventory.v1.ListItemsRequest.prototype.getSortFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setSortFieldsList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.addSortFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.clearSortFieldsList = function() {
  return this.setSortFieldsList([]);
};


/**
 * repeated string directions = 15;
 * @return {!Array<string>}
 */
proto.inventory.v1.ListItemsRequest.prototype.getDirectionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.setDirectionsList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.addDirections = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.inventory.v1.ListItemsRequest} returns this
 */
proto.inventory.v1.ListItemsRequest.prototype.clearDirectionsList = function() {
  return this.setDirectionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.inventory.v1.ListItemsByItemDefRequest.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.ListItemsByItemDefRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.ListItemsByItemDefRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.ListItemsByItemDefRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
itemDefId: jspb.Message.getFieldWithDefault(msg, 1, ""),
limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
sortFieldsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
directionsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.ListItemsByItemDefRequest}
 */
proto.inventory.v1.ListItemsByItemDefRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.ListItemsByItemDefRequest;
  return proto.inventory.v1.ListItemsByItemDefRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.ListItemsByItemDefRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.ListItemsByItemDefRequest}
 */
proto.inventory.v1.ListItemsByItemDefRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemDefId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addSortFields(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addDirections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.ListItemsByItemDefRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.ListItemsByItemDefRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.ListItemsByItemDefRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemDefId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSortFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getDirectionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional string item_def_id = 1;
 * @return {string}
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.getItemDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.ListItemsByItemDefRequest} returns this
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.setItemDefId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.ListItemsByItemDefRequest} returns this
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 offset = 3;
 * @return {number}
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.ListItemsByItemDefRequest} returns this
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated string sort_fields = 4;
 * @return {!Array<string>}
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.getSortFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.inventory.v1.ListItemsByItemDefRequest} returns this
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.setSortFieldsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.inventory.v1.ListItemsByItemDefRequest} returns this
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.addSortFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.inventory.v1.ListItemsByItemDefRequest} returns this
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.clearSortFieldsList = function() {
  return this.setSortFieldsList([]);
};


/**
 * repeated string directions = 5;
 * @return {!Array<string>}
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.getDirectionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.inventory.v1.ListItemsByItemDefRequest} returns this
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.setDirectionsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.inventory.v1.ListItemsByItemDefRequest} returns this
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.addDirections = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.inventory.v1.ListItemsByItemDefRequest} returns this
 */
proto.inventory.v1.ListItemsByItemDefRequest.prototype.clearDirectionsList = function() {
  return this.setDirectionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.inventory.v1.ListItemsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.ListItemsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.ListItemsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.ListItemsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.ListItemsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.inventory.v1.Item.toObject, includeInstance),
pagination: (f = msg.getPagination()) && common_pagination_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.ListItemsResponse}
 */
proto.inventory.v1.ListItemsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.ListItemsResponse;
  return proto.inventory.v1.ListItemsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.ListItemsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.ListItemsResponse}
 */
proto.inventory.v1.ListItemsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.inventory.v1.Item;
      reader.readMessage(value,proto.inventory.v1.Item.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 2:
      var value = new common_pagination_pb.Pagination;
      reader.readMessage(value,common_pagination_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.ListItemsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.ListItemsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.ListItemsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.ListItemsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.inventory.v1.Item.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pagination_pb.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Item items = 1;
 * @return {!Array<!proto.inventory.v1.Item>}
 */
proto.inventory.v1.ListItemsResponse.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.inventory.v1.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.inventory.v1.Item, 1));
};


/**
 * @param {!Array<!proto.inventory.v1.Item>} value
 * @return {!proto.inventory.v1.ListItemsResponse} returns this
*/
proto.inventory.v1.ListItemsResponse.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.inventory.v1.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.inventory.v1.Item}
 */
proto.inventory.v1.ListItemsResponse.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.inventory.v1.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.inventory.v1.ListItemsResponse} returns this
 */
proto.inventory.v1.ListItemsResponse.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional common.v1.Pagination pagination = 2;
 * @return {?proto.common.v1.Pagination}
 */
proto.inventory.v1.ListItemsResponse.prototype.getPagination = function() {
  return /** @type{?proto.common.v1.Pagination} */ (
    jspb.Message.getWrapperField(this, common_pagination_pb.Pagination, 2));
};


/**
 * @param {?proto.common.v1.Pagination|undefined} value
 * @return {!proto.inventory.v1.ListItemsResponse} returns this
*/
proto.inventory.v1.ListItemsResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.inventory.v1.ListItemsResponse} returns this
 */
proto.inventory.v1.ListItemsResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.ListItemsResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.ConsumeItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.ConsumeItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.ConsumeItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.ConsumeItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
itemId: jspb.Message.getFieldWithDefault(msg, 1, ""),
quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.ConsumeItemRequest}
 */
proto.inventory.v1.ConsumeItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.ConsumeItemRequest;
  return proto.inventory.v1.ConsumeItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.ConsumeItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.ConsumeItemRequest}
 */
proto.inventory.v1.ConsumeItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.ConsumeItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.ConsumeItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.ConsumeItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.ConsumeItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string item_id = 1;
 * @return {string}
 */
proto.inventory.v1.ConsumeItemRequest.prototype.getItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.ConsumeItemRequest} returns this
 */
proto.inventory.v1.ConsumeItemRequest.prototype.setItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 quantity = 2;
 * @return {number}
 */
proto.inventory.v1.ConsumeItemRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.ConsumeItemRequest} returns this
 */
proto.inventory.v1.ConsumeItemRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.ConsumeItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.ConsumeItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.ConsumeItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.ConsumeItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.ConsumeItemResponse}
 */
proto.inventory.v1.ConsumeItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.ConsumeItemResponse;
  return proto.inventory.v1.ConsumeItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.ConsumeItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.ConsumeItemResponse}
 */
proto.inventory.v1.ConsumeItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.ConsumeItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.ConsumeItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.ConsumeItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.ConsumeItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.inventory.v1.ConsumeItemResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.ConsumeItemResponse} returns this
 */
proto.inventory.v1.ConsumeItemResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.UnpackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.UnpackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.UnpackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.UnpackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
itemId: jspb.Message.getFieldWithDefault(msg, 1, ""),
accountId: jspb.Message.getFieldWithDefault(msg, 2, 0),
appId: jspb.Message.getFieldWithDefault(msg, 3, 0),
tags: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.UnpackRequest}
 */
proto.inventory.v1.UnpackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.UnpackRequest;
  return proto.inventory.v1.UnpackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.UnpackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.UnpackRequest}
 */
proto.inventory.v1.UnpackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAppId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.UnpackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.UnpackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.UnpackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.UnpackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAppId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTags();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string item_id = 1;
 * @return {string}
 */
proto.inventory.v1.UnpackRequest.prototype.getItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.UnpackRequest} returns this
 */
proto.inventory.v1.UnpackRequest.prototype.setItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 account_id = 2;
 * @return {number}
 */
proto.inventory.v1.UnpackRequest.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.UnpackRequest} returns this
 */
proto.inventory.v1.UnpackRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 app_id = 3;
 * @return {number}
 */
proto.inventory.v1.UnpackRequest.prototype.getAppId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.UnpackRequest} returns this
 */
proto.inventory.v1.UnpackRequest.prototype.setAppId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string tags = 4;
 * @return {string}
 */
proto.inventory.v1.UnpackRequest.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.UnpackRequest} returns this
 */
proto.inventory.v1.UnpackRequest.prototype.setTags = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.inventory.v1.UnpackResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.UnpackResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.UnpackResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.UnpackResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.UnpackResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
itemIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.UnpackResponse}
 */
proto.inventory.v1.UnpackResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.UnpackResponse;
  return proto.inventory.v1.UnpackResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.UnpackResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.UnpackResponse}
 */
proto.inventory.v1.UnpackResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addItemIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.UnpackResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.UnpackResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.UnpackResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.UnpackResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string item_ids = 1;
 * @return {!Array<string>}
 */
proto.inventory.v1.UnpackResponse.prototype.getItemIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.inventory.v1.UnpackResponse} returns this
 */
proto.inventory.v1.UnpackResponse.prototype.setItemIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.inventory.v1.UnpackResponse} returns this
 */
proto.inventory.v1.UnpackResponse.prototype.addItemIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.inventory.v1.UnpackResponse} returns this
 */
proto.inventory.v1.UnpackResponse.prototype.clearItemIdsList = function() {
  return this.setItemIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.GenerateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.GenerateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.GenerateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.GenerateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
itemDefId: jspb.Message.getFieldWithDefault(msg, 1, ""),
accountId: jspb.Message.getFieldWithDefault(msg, 2, 0),
appId: jspb.Message.getFieldWithDefault(msg, 3, 0),
tags: jspb.Message.getFieldWithDefault(msg, 4, ""),
holdTill: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.GenerateRequest}
 */
proto.inventory.v1.GenerateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.GenerateRequest;
  return proto.inventory.v1.GenerateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.GenerateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.GenerateRequest}
 */
proto.inventory.v1.GenerateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemDefId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAppId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHoldTill(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.GenerateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.GenerateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.GenerateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.GenerateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemDefId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAppId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTags();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHoldTill();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string item_def_id = 1;
 * @return {string}
 */
proto.inventory.v1.GenerateRequest.prototype.getItemDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.GenerateRequest} returns this
 */
proto.inventory.v1.GenerateRequest.prototype.setItemDefId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 account_id = 2;
 * @return {number}
 */
proto.inventory.v1.GenerateRequest.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.GenerateRequest} returns this
 */
proto.inventory.v1.GenerateRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 app_id = 3;
 * @return {number}
 */
proto.inventory.v1.GenerateRequest.prototype.getAppId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.GenerateRequest} returns this
 */
proto.inventory.v1.GenerateRequest.prototype.setAppId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string tags = 4;
 * @return {string}
 */
proto.inventory.v1.GenerateRequest.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.GenerateRequest} returns this
 */
proto.inventory.v1.GenerateRequest.prototype.setTags = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 hold_till = 5;
 * @return {number}
 */
proto.inventory.v1.GenerateRequest.prototype.getHoldTill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.GenerateRequest} returns this
 */
proto.inventory.v1.GenerateRequest.prototype.setHoldTill = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.GenerateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.GenerateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.GenerateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.GenerateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
itemId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.GenerateResponse}
 */
proto.inventory.v1.GenerateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.GenerateResponse;
  return proto.inventory.v1.GenerateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.GenerateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.GenerateResponse}
 */
proto.inventory.v1.GenerateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.GenerateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.GenerateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.GenerateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.GenerateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string item_id = 1;
 * @return {string}
 */
proto.inventory.v1.GenerateResponse.prototype.getItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.GenerateResponse} returns this
 */
proto.inventory.v1.GenerateResponse.prototype.setItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.UpdateItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.UpdateItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.UpdateItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.UpdateItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
itemId: jspb.Message.getFieldWithDefault(msg, 1, ""),
tags: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
appMeta: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
rarity: jspb.Message.getFieldWithDefault(msg, 4, 0),
holdTill: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.UpdateItemRequest}
 */
proto.inventory.v1.UpdateItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.UpdateItemRequest;
  return proto.inventory.v1.UpdateItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.UpdateItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.UpdateItemRequest}
 */
proto.inventory.v1.UpdateItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppMeta(value);
      break;
    case 4:
      var value = /** @type {!proto.common.v1.Rarity} */ (reader.readEnum());
      msg.setRarity(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHoldTill(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.UpdateItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.UpdateItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.UpdateItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.UpdateItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRarity();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string item_id = 1;
 * @return {string}
 */
proto.inventory.v1.UpdateItemRequest.prototype.getItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.UpdateItemRequest} returns this
 */
proto.inventory.v1.UpdateItemRequest.prototype.setItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tags = 2;
 * @return {string}
 */
proto.inventory.v1.UpdateItemRequest.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.UpdateItemRequest} returns this
 */
proto.inventory.v1.UpdateItemRequest.prototype.setTags = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.inventory.v1.UpdateItemRequest} returns this
 */
proto.inventory.v1.UpdateItemRequest.prototype.clearTags = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.UpdateItemRequest.prototype.hasTags = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string app_meta = 3;
 * @return {string}
 */
proto.inventory.v1.UpdateItemRequest.prototype.getAppMeta = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.UpdateItemRequest} returns this
 */
proto.inventory.v1.UpdateItemRequest.prototype.setAppMeta = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.inventory.v1.UpdateItemRequest} returns this
 */
proto.inventory.v1.UpdateItemRequest.prototype.clearAppMeta = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.UpdateItemRequest.prototype.hasAppMeta = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.v1.Rarity rarity = 4;
 * @return {!proto.common.v1.Rarity}
 */
proto.inventory.v1.UpdateItemRequest.prototype.getRarity = function() {
  return /** @type {!proto.common.v1.Rarity} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.common.v1.Rarity} value
 * @return {!proto.inventory.v1.UpdateItemRequest} returns this
 */
proto.inventory.v1.UpdateItemRequest.prototype.setRarity = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional int64 hold_till = 5;
 * @return {number}
 */
proto.inventory.v1.UpdateItemRequest.prototype.getHoldTill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.UpdateItemRequest} returns this
 */
proto.inventory.v1.UpdateItemRequest.prototype.setHoldTill = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.inventory.v1.UpdateItemRequest} returns this
 */
proto.inventory.v1.UpdateItemRequest.prototype.clearHoldTill = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.UpdateItemRequest.prototype.hasHoldTill = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.UpdateItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.UpdateItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.UpdateItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.UpdateItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.UpdateItemResponse}
 */
proto.inventory.v1.UpdateItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.UpdateItemResponse;
  return proto.inventory.v1.UpdateItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.UpdateItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.UpdateItemResponse}
 */
proto.inventory.v1.UpdateItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.UpdateItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.UpdateItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.UpdateItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.UpdateItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.inventory.v1.UpdateItemResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.UpdateItemResponse} returns this
 */
proto.inventory.v1.UpdateItemResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.TransferItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.TransferItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.TransferItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.TransferItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
itemId: jspb.Message.getFieldWithDefault(msg, 1, ""),
accountTo: jspb.Message.getFieldWithDefault(msg, 2, 0),
comment: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.TransferItemRequest}
 */
proto.inventory.v1.TransferItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.TransferItemRequest;
  return proto.inventory.v1.TransferItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.TransferItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.TransferItemRequest}
 */
proto.inventory.v1.TransferItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountTo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.TransferItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.TransferItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.TransferItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.TransferItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountTo();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string item_id = 1;
 * @return {string}
 */
proto.inventory.v1.TransferItemRequest.prototype.getItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.TransferItemRequest} returns this
 */
proto.inventory.v1.TransferItemRequest.prototype.setItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 account_to = 2;
 * @return {number}
 */
proto.inventory.v1.TransferItemRequest.prototype.getAccountTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.TransferItemRequest} returns this
 */
proto.inventory.v1.TransferItemRequest.prototype.setAccountTo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string comment = 3;
 * @return {string}
 */
proto.inventory.v1.TransferItemRequest.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.TransferItemRequest} returns this
 */
proto.inventory.v1.TransferItemRequest.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.TransferItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.TransferItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.TransferItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.TransferItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.TransferItemResponse}
 */
proto.inventory.v1.TransferItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.TransferItemResponse;
  return proto.inventory.v1.TransferItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.TransferItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.TransferItemResponse}
 */
proto.inventory.v1.TransferItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.TransferItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.TransferItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.TransferItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.TransferItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.inventory.v1.TransferItemResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.TransferItemResponse} returns this
 */
proto.inventory.v1.TransferItemResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.StreamItemTransfersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.StreamItemTransfersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.StreamItemTransfersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.StreamItemTransfersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
consumer: jspb.Message.getFieldWithDefault(msg, 1, ""),
limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
ackByRequest: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.StreamItemTransfersRequest}
 */
proto.inventory.v1.StreamItemTransfersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.StreamItemTransfersRequest;
  return proto.inventory.v1.StreamItemTransfersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.StreamItemTransfersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.StreamItemTransfersRequest}
 */
proto.inventory.v1.StreamItemTransfersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAckByRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.StreamItemTransfersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.StreamItemTransfersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.StreamItemTransfersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.StreamItemTransfersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsumer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAckByRequest();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string consumer = 1;
 * @return {string}
 */
proto.inventory.v1.StreamItemTransfersRequest.prototype.getConsumer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.StreamItemTransfersRequest} returns this
 */
proto.inventory.v1.StreamItemTransfersRequest.prototype.setConsumer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 limit = 2;
 * @return {number}
 */
proto.inventory.v1.StreamItemTransfersRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.StreamItemTransfersRequest} returns this
 */
proto.inventory.v1.StreamItemTransfersRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool ack_by_request = 3;
 * @return {boolean}
 */
proto.inventory.v1.StreamItemTransfersRequest.prototype.getAckByRequest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.inventory.v1.StreamItemTransfersRequest} returns this
 */
proto.inventory.v1.StreamItemTransfersRequest.prototype.setAckByRequest = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.StreamItemTransfersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.StreamItemTransfersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.StreamItemTransfersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
itemId: jspb.Message.getFieldWithDefault(msg, 1, ""),
accountFrom: jspb.Message.getFieldWithDefault(msg, 2, 0),
accountTo: jspb.Message.getFieldWithDefault(msg, 3, 0),
timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),
tags: jspb.Message.getFieldWithDefault(msg, 5, ""),
displayType: jspb.Message.getFieldWithDefault(msg, 6, ""),
itemDefId: jspb.Message.getFieldWithDefault(msg, 7, ""),
defaultTags: jspb.Message.getFieldWithDefault(msg, 8, ""),
messageId: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.StreamItemTransfersResponse}
 */
proto.inventory.v1.StreamItemTransfersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.StreamItemTransfersResponse;
  return proto.inventory.v1.StreamItemTransfersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.StreamItemTransfersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.StreamItemTransfersResponse}
 */
proto.inventory.v1.StreamItemTransfersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountFrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountTo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemDefId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultTags(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.StreamItemTransfersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.StreamItemTransfersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.StreamItemTransfersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountFrom();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAccountTo();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTags();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisplayType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getItemDefId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDefaultTags();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string item_id = 1;
 * @return {string}
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.getItemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.StreamItemTransfersResponse} returns this
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.setItemId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 account_from = 2;
 * @return {number}
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.getAccountFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.StreamItemTransfersResponse} returns this
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.setAccountFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 account_to = 3;
 * @return {number}
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.getAccountTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.StreamItemTransfersResponse} returns this
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.setAccountTo = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 timestamp = 4;
 * @return {number}
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.StreamItemTransfersResponse} returns this
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string tags = 5;
 * @return {string}
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.StreamItemTransfersResponse} returns this
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.setTags = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string display_type = 6;
 * @return {string}
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.getDisplayType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.StreamItemTransfersResponse} returns this
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.setDisplayType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string item_def_id = 7;
 * @return {string}
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.getItemDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.StreamItemTransfersResponse} returns this
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.setItemDefId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string default_tags = 8;
 * @return {string}
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.getDefaultTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.StreamItemTransfersResponse} returns this
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.setDefaultTags = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string message_id = 9;
 * @return {string}
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.getMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.StreamItemTransfersResponse} returns this
 */
proto.inventory.v1.StreamItemTransfersResponse.prototype.setMessageId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.StreamItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.StreamItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.StreamItemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.StreamItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
consumer: jspb.Message.getFieldWithDefault(msg, 1, ""),
limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
ackByRequest: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.StreamItemRequest}
 */
proto.inventory.v1.StreamItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.StreamItemRequest;
  return proto.inventory.v1.StreamItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.StreamItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.StreamItemRequest}
 */
proto.inventory.v1.StreamItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAckByRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.StreamItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.StreamItemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.StreamItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.StreamItemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsumer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAckByRequest();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string consumer = 1;
 * @return {string}
 */
proto.inventory.v1.StreamItemRequest.prototype.getConsumer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.StreamItemRequest} returns this
 */
proto.inventory.v1.StreamItemRequest.prototype.setConsumer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 limit = 2;
 * @return {number}
 */
proto.inventory.v1.StreamItemRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.inventory.v1.StreamItemRequest} returns this
 */
proto.inventory.v1.StreamItemRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool ack_by_request = 3;
 * @return {boolean}
 */
proto.inventory.v1.StreamItemRequest.prototype.getAckByRequest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.inventory.v1.StreamItemRequest} returns this
 */
proto.inventory.v1.StreamItemRequest.prototype.setAckByRequest = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.StreamItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.StreamItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.StreamItemResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.StreamItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
item: (f = msg.getItem()) && proto.inventory.v1.Item.toObject(includeInstance, f),
type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.StreamItemResponse}
 */
proto.inventory.v1.StreamItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.StreamItemResponse;
  return proto.inventory.v1.StreamItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.StreamItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.StreamItemResponse}
 */
proto.inventory.v1.StreamItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.inventory.v1.Item;
      reader.readMessage(value,proto.inventory.v1.Item.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = /** @type {!proto.inventory.v1.StreamItemOpType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.StreamItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.StreamItemResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.StreamItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.StreamItemResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.inventory.v1.Item.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional Item item = 1;
 * @return {?proto.inventory.v1.Item}
 */
proto.inventory.v1.StreamItemResponse.prototype.getItem = function() {
  return /** @type{?proto.inventory.v1.Item} */ (
    jspb.Message.getWrapperField(this, proto.inventory.v1.Item, 1));
};


/**
 * @param {?proto.inventory.v1.Item|undefined} value
 * @return {!proto.inventory.v1.StreamItemResponse} returns this
*/
proto.inventory.v1.StreamItemResponse.prototype.setItem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.inventory.v1.StreamItemResponse} returns this
 */
proto.inventory.v1.StreamItemResponse.prototype.clearItem = function() {
  return this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.inventory.v1.StreamItemResponse.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional StreamItemOpType type = 2;
 * @return {!proto.inventory.v1.StreamItemOpType}
 */
proto.inventory.v1.StreamItemResponse.prototype.getType = function() {
  return /** @type {!proto.inventory.v1.StreamItemOpType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.inventory.v1.StreamItemOpType} value
 * @return {!proto.inventory.v1.StreamItemResponse} returns this
 */
proto.inventory.v1.StreamItemResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.AddGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.AddGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.AddGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.AddGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
type: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.AddGroupRequest}
 */
proto.inventory.v1.AddGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.AddGroupRequest;
  return proto.inventory.v1.AddGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.AddGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.AddGroupRequest}
 */
proto.inventory.v1.AddGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.inventory.v1.StreamType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.AddGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.AddGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.AddGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.AddGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional StreamType type = 1;
 * @return {!proto.inventory.v1.StreamType}
 */
proto.inventory.v1.AddGroupRequest.prototype.getType = function() {
  return /** @type {!proto.inventory.v1.StreamType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.inventory.v1.StreamType} value
 * @return {!proto.inventory.v1.AddGroupRequest} returns this
 */
proto.inventory.v1.AddGroupRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.AddGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.AddGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.AddGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.AddGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.AddGroupResponse}
 */
proto.inventory.v1.AddGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.AddGroupResponse;
  return proto.inventory.v1.AddGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.AddGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.AddGroupResponse}
 */
proto.inventory.v1.AddGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.AddGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.AddGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.AddGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.AddGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.inventory.v1.AddGroupResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.inventory.v1.AddGroupResponse} returns this
 */
proto.inventory.v1.AddGroupResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.inventory.v1.StreamItemTransfersAckRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.StreamItemTransfersAckRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.StreamItemTransfersAckRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.StreamItemTransfersAckRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.StreamItemTransfersAckRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
messagesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.StreamItemTransfersAckRequest}
 */
proto.inventory.v1.StreamItemTransfersAckRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.StreamItemTransfersAckRequest;
  return proto.inventory.v1.StreamItemTransfersAckRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.StreamItemTransfersAckRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.StreamItemTransfersAckRequest}
 */
proto.inventory.v1.StreamItemTransfersAckRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addMessages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.StreamItemTransfersAckRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.StreamItemTransfersAckRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.StreamItemTransfersAckRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.StreamItemTransfersAckRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string messages = 1;
 * @return {!Array<string>}
 */
proto.inventory.v1.StreamItemTransfersAckRequest.prototype.getMessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.inventory.v1.StreamItemTransfersAckRequest} returns this
 */
proto.inventory.v1.StreamItemTransfersAckRequest.prototype.setMessagesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.inventory.v1.StreamItemTransfersAckRequest} returns this
 */
proto.inventory.v1.StreamItemTransfersAckRequest.prototype.addMessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.inventory.v1.StreamItemTransfersAckRequest} returns this
 */
proto.inventory.v1.StreamItemTransfersAckRequest.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.StreamItemTransfersAckResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.StreamItemTransfersAckResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.StreamItemTransfersAckResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.StreamItemTransfersAckResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.StreamItemTransfersAckResponse}
 */
proto.inventory.v1.StreamItemTransfersAckResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.StreamItemTransfersAckResponse;
  return proto.inventory.v1.StreamItemTransfersAckResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.StreamItemTransfersAckResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.StreamItemTransfersAckResponse}
 */
proto.inventory.v1.StreamItemTransfersAckResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.StreamItemTransfersAckResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.StreamItemTransfersAckResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.StreamItemTransfersAckResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.StreamItemTransfersAckResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.inventory.v1.StreamItemTransfersAckResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.inventory.v1.StreamItemTransfersAckResponse} returns this
 */
proto.inventory.v1.StreamItemTransfersAckResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.inventory.v1.AckStreamMessagesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.AckStreamMessagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.AckStreamMessagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.AckStreamMessagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.AckStreamMessagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
messagesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.AckStreamMessagesRequest}
 */
proto.inventory.v1.AckStreamMessagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.AckStreamMessagesRequest;
  return proto.inventory.v1.AckStreamMessagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.AckStreamMessagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.AckStreamMessagesRequest}
 */
proto.inventory.v1.AckStreamMessagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addMessages(value);
      break;
    case 2:
      var value = /** @type {!proto.inventory.v1.StreamType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.AckStreamMessagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.AckStreamMessagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.AckStreamMessagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.AckStreamMessagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * repeated string messages = 1;
 * @return {!Array<string>}
 */
proto.inventory.v1.AckStreamMessagesRequest.prototype.getMessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.inventory.v1.AckStreamMessagesRequest} returns this
 */
proto.inventory.v1.AckStreamMessagesRequest.prototype.setMessagesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.inventory.v1.AckStreamMessagesRequest} returns this
 */
proto.inventory.v1.AckStreamMessagesRequest.prototype.addMessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.inventory.v1.AckStreamMessagesRequest} returns this
 */
proto.inventory.v1.AckStreamMessagesRequest.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};


/**
 * optional StreamType type = 2;
 * @return {!proto.inventory.v1.StreamType}
 */
proto.inventory.v1.AckStreamMessagesRequest.prototype.getType = function() {
  return /** @type {!proto.inventory.v1.StreamType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.inventory.v1.StreamType} value
 * @return {!proto.inventory.v1.AckStreamMessagesRequest} returns this
 */
proto.inventory.v1.AckStreamMessagesRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.inventory.v1.AckStreamMessagesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.inventory.v1.AckStreamMessagesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.inventory.v1.AckStreamMessagesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.AckStreamMessagesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.inventory.v1.AckStreamMessagesResponse}
 */
proto.inventory.v1.AckStreamMessagesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.inventory.v1.AckStreamMessagesResponse;
  return proto.inventory.v1.AckStreamMessagesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.inventory.v1.AckStreamMessagesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.inventory.v1.AckStreamMessagesResponse}
 */
proto.inventory.v1.AckStreamMessagesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.inventory.v1.AckStreamMessagesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.inventory.v1.AckStreamMessagesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.inventory.v1.AckStreamMessagesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.inventory.v1.AckStreamMessagesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.inventory.v1.AckStreamMessagesResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.inventory.v1.AckStreamMessagesResponse} returns this
 */
proto.inventory.v1.AckStreamMessagesResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.inventory.v1.StreamItemOpType = {
  STREAM_ITEM_OP_TYPE_UNKNOWN: 0,
  STREAM_ITEM_OP_TYPE_CREATED: 1,
  STREAM_ITEM_OP_TYPE_BURNED: 2
};

/**
 * @enum {number}
 */
proto.inventory.v1.StreamType = {
  STREAM_TYPE_UNKNOWN: 0,
  STREAM_TYPE_ITEM: 1,
  STREAM_TYPE_TRANSFER_ITEM: 2
};

goog.object.extend(exports, proto.inventory.v1);
