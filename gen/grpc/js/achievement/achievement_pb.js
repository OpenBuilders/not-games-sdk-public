// source: achievement/achievement.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var common_pagination_pb = require('../common/pagination_pb.js');
goog.object.extend(proto, common_pagination_pb);
goog.exportSymbol('proto.achievement.v1.Achievement', null, global);
goog.exportSymbol('proto.achievement.v1.CreateAchievementsRequest', null, global);
goog.exportSymbol('proto.achievement.v1.CreateAchievementsResponse', null, global);
goog.exportSymbol('proto.achievement.v1.GetAchievementRequest', null, global);
goog.exportSymbol('proto.achievement.v1.ListAchievementsRequest', null, global);
goog.exportSymbol('proto.achievement.v1.ListAchievementsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.achievement.v1.Achievement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.achievement.v1.Achievement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.achievement.v1.Achievement.displayName = 'proto.achievement.v1.Achievement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.achievement.v1.ListAchievementsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.achievement.v1.ListAchievementsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.achievement.v1.ListAchievementsRequest.displayName = 'proto.achievement.v1.ListAchievementsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.achievement.v1.ListAchievementsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.achievement.v1.ListAchievementsResponse.repeatedFields_, null);
};
goog.inherits(proto.achievement.v1.ListAchievementsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.achievement.v1.ListAchievementsResponse.displayName = 'proto.achievement.v1.ListAchievementsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.achievement.v1.GetAchievementRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.achievement.v1.GetAchievementRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.achievement.v1.GetAchievementRequest.displayName = 'proto.achievement.v1.GetAchievementRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.achievement.v1.CreateAchievementsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.achievement.v1.CreateAchievementsRequest.repeatedFields_, null);
};
goog.inherits(proto.achievement.v1.CreateAchievementsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.achievement.v1.CreateAchievementsRequest.displayName = 'proto.achievement.v1.CreateAchievementsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.achievement.v1.CreateAchievementsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.achievement.v1.CreateAchievementsResponse.repeatedFields_, null);
};
goog.inherits(proto.achievement.v1.CreateAchievementsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.achievement.v1.CreateAchievementsResponse.displayName = 'proto.achievement.v1.CreateAchievementsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.achievement.v1.Achievement.prototype.toObject = function(opt_includeInstance) {
  return proto.achievement.v1.Achievement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.achievement.v1.Achievement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.achievement.v1.Achievement.toObject = function(includeInstance, msg) {
  var f, obj = {
achievementDefId: jspb.Message.getFieldWithDefault(msg, 1, ""),
achievementId: jspb.Message.getFieldWithDefault(msg, 2, ""),
accountId: jspb.Message.getFieldWithDefault(msg, 3, 0),
appId: jspb.Message.getFieldWithDefault(msg, 4, 0),
name: jspb.Message.getFieldWithDefault(msg, 5, ""),
description: jspb.Message.getFieldWithDefault(msg, 6, ""),
iconUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
tags: jspb.Message.getFieldWithDefault(msg, 8, ""),
hidden: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
displayType: jspb.Message.getFieldWithDefault(msg, 10, ""),
createdAt: jspb.Message.getFieldWithDefault(msg, 11, ""),
updatedAt: jspb.Message.getFieldWithDefault(msg, 12, ""),
defaultTags: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.achievement.v1.Achievement}
 */
proto.achievement.v1.Achievement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.achievement.v1.Achievement;
  return proto.achievement.v1.Achievement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.achievement.v1.Achievement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.achievement.v1.Achievement}
 */
proto.achievement.v1.Achievement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAchievementDefId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAchievementId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAppId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHidden(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayType(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.achievement.v1.Achievement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.achievement.v1.Achievement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.achievement.v1.Achievement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.achievement.v1.Achievement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAchievementDefId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAchievementId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getAppId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIconUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTags();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHidden();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getDisplayType();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getDefaultTags();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string achievement_def_id = 1;
 * @return {string}
 */
proto.achievement.v1.Achievement.prototype.getAchievementDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.achievement.v1.Achievement} returns this
 */
proto.achievement.v1.Achievement.prototype.setAchievementDefId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string achievement_id = 2;
 * @return {string}
 */
proto.achievement.v1.Achievement.prototype.getAchievementId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.achievement.v1.Achievement} returns this
 */
proto.achievement.v1.Achievement.prototype.setAchievementId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 account_id = 3;
 * @return {number}
 */
proto.achievement.v1.Achievement.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.achievement.v1.Achievement} returns this
 */
proto.achievement.v1.Achievement.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 app_id = 4;
 * @return {number}
 */
proto.achievement.v1.Achievement.prototype.getAppId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.achievement.v1.Achievement} returns this
 */
proto.achievement.v1.Achievement.prototype.setAppId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.achievement.v1.Achievement.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.achievement.v1.Achievement} returns this
 */
proto.achievement.v1.Achievement.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.achievement.v1.Achievement.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.achievement.v1.Achievement} returns this
 */
proto.achievement.v1.Achievement.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string icon_url = 7;
 * @return {string}
 */
proto.achievement.v1.Achievement.prototype.getIconUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.achievement.v1.Achievement} returns this
 */
proto.achievement.v1.Achievement.prototype.setIconUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string tags = 8;
 * @return {string}
 */
proto.achievement.v1.Achievement.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.achievement.v1.Achievement} returns this
 */
proto.achievement.v1.Achievement.prototype.setTags = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool hidden = 9;
 * @return {boolean}
 */
proto.achievement.v1.Achievement.prototype.getHidden = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.achievement.v1.Achievement} returns this
 */
proto.achievement.v1.Achievement.prototype.setHidden = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string display_type = 10;
 * @return {string}
 */
proto.achievement.v1.Achievement.prototype.getDisplayType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.achievement.v1.Achievement} returns this
 */
proto.achievement.v1.Achievement.prototype.setDisplayType = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string created_at = 11;
 * @return {string}
 */
proto.achievement.v1.Achievement.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.achievement.v1.Achievement} returns this
 */
proto.achievement.v1.Achievement.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string updated_at = 12;
 * @return {string}
 */
proto.achievement.v1.Achievement.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.achievement.v1.Achievement} returns this
 */
proto.achievement.v1.Achievement.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string default_tags = 13;
 * @return {string}
 */
proto.achievement.v1.Achievement.prototype.getDefaultTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.achievement.v1.Achievement} returns this
 */
proto.achievement.v1.Achievement.prototype.setDefaultTags = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.achievement.v1.ListAchievementsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.achievement.v1.ListAchievementsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.achievement.v1.ListAchievementsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.achievement.v1.ListAchievementsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
appId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
offset: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.achievement.v1.ListAchievementsRequest}
 */
proto.achievement.v1.ListAchievementsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.achievement.v1.ListAchievementsRequest;
  return proto.achievement.v1.ListAchievementsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.achievement.v1.ListAchievementsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.achievement.v1.ListAchievementsRequest}
 */
proto.achievement.v1.ListAchievementsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAppId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.achievement.v1.ListAchievementsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.achievement.v1.ListAchievementsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.achievement.v1.ListAchievementsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.achievement.v1.ListAchievementsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int64 app_id = 1;
 * @return {number}
 */
proto.achievement.v1.ListAchievementsRequest.prototype.getAppId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.achievement.v1.ListAchievementsRequest} returns this
 */
proto.achievement.v1.ListAchievementsRequest.prototype.setAppId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.achievement.v1.ListAchievementsRequest} returns this
 */
proto.achievement.v1.ListAchievementsRequest.prototype.clearAppId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.achievement.v1.ListAchievementsRequest.prototype.hasAppId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.achievement.v1.ListAchievementsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.achievement.v1.ListAchievementsRequest} returns this
 */
proto.achievement.v1.ListAchievementsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 offset = 3;
 * @return {number}
 */
proto.achievement.v1.ListAchievementsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.achievement.v1.ListAchievementsRequest} returns this
 */
proto.achievement.v1.ListAchievementsRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.achievement.v1.ListAchievementsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.achievement.v1.ListAchievementsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.achievement.v1.ListAchievementsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.achievement.v1.ListAchievementsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.achievement.v1.ListAchievementsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
achievementsList: jspb.Message.toObjectList(msg.getAchievementsList(),
    proto.achievement.v1.Achievement.toObject, includeInstance),
pagination: (f = msg.getPagination()) && common_pagination_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.achievement.v1.ListAchievementsResponse}
 */
proto.achievement.v1.ListAchievementsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.achievement.v1.ListAchievementsResponse;
  return proto.achievement.v1.ListAchievementsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.achievement.v1.ListAchievementsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.achievement.v1.ListAchievementsResponse}
 */
proto.achievement.v1.ListAchievementsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.achievement.v1.Achievement;
      reader.readMessage(value,proto.achievement.v1.Achievement.deserializeBinaryFromReader);
      msg.addAchievements(value);
      break;
    case 2:
      var value = new common_pagination_pb.Pagination;
      reader.readMessage(value,common_pagination_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.achievement.v1.ListAchievementsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.achievement.v1.ListAchievementsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.achievement.v1.ListAchievementsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.achievement.v1.ListAchievementsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAchievementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.achievement.v1.Achievement.serializeBinaryToWriter
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pagination_pb.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Achievement achievements = 1;
 * @return {!Array<!proto.achievement.v1.Achievement>}
 */
proto.achievement.v1.ListAchievementsResponse.prototype.getAchievementsList = function() {
  return /** @type{!Array<!proto.achievement.v1.Achievement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.achievement.v1.Achievement, 1));
};


/**
 * @param {!Array<!proto.achievement.v1.Achievement>} value
 * @return {!proto.achievement.v1.ListAchievementsResponse} returns this
*/
proto.achievement.v1.ListAchievementsResponse.prototype.setAchievementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.achievement.v1.Achievement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.achievement.v1.Achievement}
 */
proto.achievement.v1.ListAchievementsResponse.prototype.addAchievements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.achievement.v1.Achievement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.achievement.v1.ListAchievementsResponse} returns this
 */
proto.achievement.v1.ListAchievementsResponse.prototype.clearAchievementsList = function() {
  return this.setAchievementsList([]);
};


/**
 * optional common.v1.Pagination pagination = 2;
 * @return {?proto.common.v1.Pagination}
 */
proto.achievement.v1.ListAchievementsResponse.prototype.getPagination = function() {
  return /** @type{?proto.common.v1.Pagination} */ (
    jspb.Message.getWrapperField(this, common_pagination_pb.Pagination, 2));
};


/**
 * @param {?proto.common.v1.Pagination|undefined} value
 * @return {!proto.achievement.v1.ListAchievementsResponse} returns this
*/
proto.achievement.v1.ListAchievementsResponse.prototype.setPagination = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.achievement.v1.ListAchievementsResponse} returns this
 */
proto.achievement.v1.ListAchievementsResponse.prototype.clearPagination = function() {
  return this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.achievement.v1.ListAchievementsResponse.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.achievement.v1.GetAchievementRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.achievement.v1.GetAchievementRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.achievement.v1.GetAchievementRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.achievement.v1.GetAchievementRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
achievementId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.achievement.v1.GetAchievementRequest}
 */
proto.achievement.v1.GetAchievementRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.achievement.v1.GetAchievementRequest;
  return proto.achievement.v1.GetAchievementRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.achievement.v1.GetAchievementRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.achievement.v1.GetAchievementRequest}
 */
proto.achievement.v1.GetAchievementRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAchievementId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.achievement.v1.GetAchievementRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.achievement.v1.GetAchievementRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.achievement.v1.GetAchievementRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.achievement.v1.GetAchievementRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAchievementId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string achievement_id = 1;
 * @return {string}
 */
proto.achievement.v1.GetAchievementRequest.prototype.getAchievementId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.achievement.v1.GetAchievementRequest} returns this
 */
proto.achievement.v1.GetAchievementRequest.prototype.setAchievementId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.achievement.v1.CreateAchievementsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.achievement.v1.CreateAchievementsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.achievement.v1.CreateAchievementsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.achievement.v1.CreateAchievementsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.achievement.v1.CreateAchievementsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
achievementDefIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
tags: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.achievement.v1.CreateAchievementsRequest}
 */
proto.achievement.v1.CreateAchievementsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.achievement.v1.CreateAchievementsRequest;
  return proto.achievement.v1.CreateAchievementsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.achievement.v1.CreateAchievementsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.achievement.v1.CreateAchievementsRequest}
 */
proto.achievement.v1.CreateAchievementsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAchievementDefIds(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.achievement.v1.CreateAchievementsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.achievement.v1.CreateAchievementsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.achievement.v1.CreateAchievementsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.achievement.v1.CreateAchievementsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAchievementDefIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getTags();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated string achievement_def_ids = 1;
 * @return {!Array<string>}
 */
proto.achievement.v1.CreateAchievementsRequest.prototype.getAchievementDefIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.achievement.v1.CreateAchievementsRequest} returns this
 */
proto.achievement.v1.CreateAchievementsRequest.prototype.setAchievementDefIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.achievement.v1.CreateAchievementsRequest} returns this
 */
proto.achievement.v1.CreateAchievementsRequest.prototype.addAchievementDefIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.achievement.v1.CreateAchievementsRequest} returns this
 */
proto.achievement.v1.CreateAchievementsRequest.prototype.clearAchievementDefIdsList = function() {
  return this.setAchievementDefIdsList([]);
};


/**
 * optional string tags = 2;
 * @return {string}
 */
proto.achievement.v1.CreateAchievementsRequest.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.achievement.v1.CreateAchievementsRequest} returns this
 */
proto.achievement.v1.CreateAchievementsRequest.prototype.setTags = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.achievement.v1.CreateAchievementsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.achievement.v1.CreateAchievementsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.achievement.v1.CreateAchievementsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.achievement.v1.CreateAchievementsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.achievement.v1.CreateAchievementsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
achievementsList: jspb.Message.toObjectList(msg.getAchievementsList(),
    proto.achievement.v1.Achievement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.achievement.v1.CreateAchievementsResponse}
 */
proto.achievement.v1.CreateAchievementsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.achievement.v1.CreateAchievementsResponse;
  return proto.achievement.v1.CreateAchievementsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.achievement.v1.CreateAchievementsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.achievement.v1.CreateAchievementsResponse}
 */
proto.achievement.v1.CreateAchievementsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.achievement.v1.Achievement;
      reader.readMessage(value,proto.achievement.v1.Achievement.deserializeBinaryFromReader);
      msg.addAchievements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.achievement.v1.CreateAchievementsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.achievement.v1.CreateAchievementsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.achievement.v1.CreateAchievementsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.achievement.v1.CreateAchievementsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAchievementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.achievement.v1.Achievement.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Achievement achievements = 1;
 * @return {!Array<!proto.achievement.v1.Achievement>}
 */
proto.achievement.v1.CreateAchievementsResponse.prototype.getAchievementsList = function() {
  return /** @type{!Array<!proto.achievement.v1.Achievement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.achievement.v1.Achievement, 1));
};


/**
 * @param {!Array<!proto.achievement.v1.Achievement>} value
 * @return {!proto.achievement.v1.CreateAchievementsResponse} returns this
*/
proto.achievement.v1.CreateAchievementsResponse.prototype.setAchievementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.achievement.v1.Achievement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.achievement.v1.Achievement}
 */
proto.achievement.v1.CreateAchievementsResponse.prototype.addAchievements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.achievement.v1.Achievement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.achievement.v1.CreateAchievementsResponse} returns this
 */
proto.achievement.v1.CreateAchievementsResponse.prototype.clearAchievementsList = function() {
  return this.setAchievementsList([]);
};


goog.object.extend(exports, proto.achievement.v1);
