// source: registry/registry.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var common_rarity_pb = require('../common/rarity_pb.js');
goog.object.extend(proto, common_rarity_pb);
goog.exportSymbol('proto.registry.v1.AchievementDef', null, global);
goog.exportSymbol('proto.registry.v1.CreateAchievementDefRequest', null, global);
goog.exportSymbol('proto.registry.v1.CreateAchievementDefResponse', null, global);
goog.exportSymbol('proto.registry.v1.CreateItemDefRequest', null, global);
goog.exportSymbol('proto.registry.v1.CreateItemDefResponse', null, global);
goog.exportSymbol('proto.registry.v1.GetAchievementDefRequest', null, global);
goog.exportSymbol('proto.registry.v1.GetItemDefRequest', null, global);
goog.exportSymbol('proto.registry.v1.ItemDef', null, global);
goog.exportSymbol('proto.registry.v1.UpdateAchievementDefRequest', null, global);
goog.exportSymbol('proto.registry.v1.UpdateAchievementDefResponse', null, global);
goog.exportSymbol('proto.registry.v1.UpdateItemDefRequest', null, global);
goog.exportSymbol('proto.registry.v1.UpdateItemDefResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry.v1.ItemDef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry.v1.ItemDef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry.v1.ItemDef.displayName = 'proto.registry.v1.ItemDef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry.v1.UpdateItemDefRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry.v1.UpdateItemDefRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry.v1.UpdateItemDefRequest.displayName = 'proto.registry.v1.UpdateItemDefRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry.v1.AchievementDef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry.v1.AchievementDef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry.v1.AchievementDef.displayName = 'proto.registry.v1.AchievementDef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry.v1.GetItemDefRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry.v1.GetItemDefRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry.v1.GetItemDefRequest.displayName = 'proto.registry.v1.GetItemDefRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry.v1.CreateItemDefRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry.v1.CreateItemDefRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry.v1.CreateItemDefRequest.displayName = 'proto.registry.v1.CreateItemDefRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry.v1.CreateItemDefResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry.v1.CreateItemDefResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry.v1.CreateItemDefResponse.displayName = 'proto.registry.v1.CreateItemDefResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry.v1.UpdateItemDefResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry.v1.UpdateItemDefResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry.v1.UpdateItemDefResponse.displayName = 'proto.registry.v1.UpdateItemDefResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry.v1.GetAchievementDefRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry.v1.GetAchievementDefRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry.v1.GetAchievementDefRequest.displayName = 'proto.registry.v1.GetAchievementDefRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry.v1.CreateAchievementDefRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry.v1.CreateAchievementDefRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry.v1.CreateAchievementDefRequest.displayName = 'proto.registry.v1.CreateAchievementDefRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry.v1.CreateAchievementDefResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry.v1.CreateAchievementDefResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry.v1.CreateAchievementDefResponse.displayName = 'proto.registry.v1.CreateAchievementDefResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry.v1.UpdateAchievementDefRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry.v1.UpdateAchievementDefRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry.v1.UpdateAchievementDefRequest.displayName = 'proto.registry.v1.UpdateAchievementDefRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registry.v1.UpdateAchievementDefResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registry.v1.UpdateAchievementDefResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registry.v1.UpdateAchievementDefResponse.displayName = 'proto.registry.v1.UpdateAchievementDefResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry.v1.ItemDef.prototype.toObject = function(opt_includeInstance) {
  return proto.registry.v1.ItemDef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry.v1.ItemDef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.ItemDef.toObject = function(includeInstance, msg) {
  var f, obj = {
itemDefId: jspb.Message.getFieldWithDefault(msg, 1, ""),
appId: jspb.Message.getFieldWithDefault(msg, 2, 0),
name: jspb.Message.getFieldWithDefault(msg, 3, ""),
description: jspb.Message.getFieldWithDefault(msg, 4, ""),
type: jspb.Message.getFieldWithDefault(msg, 5, ""),
displayType: jspb.Message.getFieldWithDefault(msg, 6, ""),
bundle: jspb.Message.getFieldWithDefault(msg, 7, ""),
price: jspb.Message.getFieldWithDefault(msg, 8, ""),
iconUrl: jspb.Message.getFieldWithDefault(msg, 9, ""),
marketable: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
tags: jspb.Message.getFieldWithDefault(msg, 11, ""),
storeTags: jspb.Message.getFieldWithDefault(msg, 12, ""),
storeImages: jspb.Message.getFieldWithDefault(msg, 13, ""),
appFiles: jspb.Message.getFieldWithDefault(msg, 14, ""),
collection: jspb.Message.getFieldWithDefault(msg, 15, ""),
hidden: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
storeHidden: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
gameOnly: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
promo: jspb.Message.getFieldWithDefault(msg, 19, ""),
tradable: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
rarity: jspb.Message.getFieldWithDefault(msg, 21, 0),
exchange: jspb.Message.getFieldWithDefault(msg, 22, ""),
supply: jspb.Message.getFieldWithDefault(msg, 23, 0),
maxSupply: (f = jspb.Message.getField(msg, 24)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry.v1.ItemDef}
 */
proto.registry.v1.ItemDef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry.v1.ItemDef;
  return proto.registry.v1.ItemDef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry.v1.ItemDef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry.v1.ItemDef}
 */
proto.registry.v1.ItemDef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemDefId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAppId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBundle(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrice(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconUrl(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMarketable(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreTags(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreImages(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppFiles(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHidden(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStoreHidden(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGameOnly(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromo(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTradable(value);
      break;
    case 21:
      var value = /** @type {!proto.common.v1.Rarity} */ (reader.readEnum());
      msg.setRarity(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSupply(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxSupply(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry.v1.ItemDef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry.v1.ItemDef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry.v1.ItemDef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.ItemDef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemDefId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisplayType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBundle();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIconUrl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMarketable();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getTags();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getStoreTags();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getStoreImages();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAppFiles();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getHidden();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getStoreHidden();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getGameOnly();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getPromo();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getTradable();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getRarity();
  if (f !== 0.0) {
    writer.writeEnum(
      21,
      f
    );
  }
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getSupply();
  if (f !== 0) {
    writer.writeInt64(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeInt64(
      24,
      f
    );
  }
};


/**
 * optional string item_def_id = 1;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getItemDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setItemDefId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 app_id = 2;
 * @return {number}
 */
proto.registry.v1.ItemDef.prototype.getAppId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setAppId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string display_type = 6;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getDisplayType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setDisplayType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string bundle = 7;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getBundle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setBundle = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string price = 8;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string icon_url = 9;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getIconUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setIconUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool marketable = 10;
 * @return {boolean}
 */
proto.registry.v1.ItemDef.prototype.getMarketable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setMarketable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string tags = 11;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setTags = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string store_tags = 12;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getStoreTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setStoreTags = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string store_images = 13;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getStoreImages = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setStoreImages = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string app_files = 14;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getAppFiles = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setAppFiles = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string collection = 15;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional bool hidden = 16;
 * @return {boolean}
 */
proto.registry.v1.ItemDef.prototype.getHidden = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setHidden = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool store_hidden = 17;
 * @return {boolean}
 */
proto.registry.v1.ItemDef.prototype.getStoreHidden = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setStoreHidden = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool game_only = 18;
 * @return {boolean}
 */
proto.registry.v1.ItemDef.prototype.getGameOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setGameOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional string promo = 19;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getPromo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setPromo = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional bool tradable = 20;
 * @return {boolean}
 */
proto.registry.v1.ItemDef.prototype.getTradable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setTradable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional common.v1.Rarity rarity = 21;
 * @return {!proto.common.v1.Rarity}
 */
proto.registry.v1.ItemDef.prototype.getRarity = function() {
  return /** @type {!proto.common.v1.Rarity} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {!proto.common.v1.Rarity} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setRarity = function(value) {
  return jspb.Message.setProto3EnumField(this, 21, value);
};


/**
 * optional string exchange = 22;
 * @return {string}
 */
proto.registry.v1.ItemDef.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional int64 supply = 23;
 * @return {number}
 */
proto.registry.v1.ItemDef.prototype.getSupply = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setSupply = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional int64 max_supply = 24;
 * @return {number}
 */
proto.registry.v1.ItemDef.prototype.getMaxSupply = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.setMaxSupply = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.registry.v1.ItemDef} returns this
 */
proto.registry.v1.ItemDef.prototype.clearMaxSupply = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry.v1.ItemDef.prototype.hasMaxSupply = function() {
  return jspb.Message.getField(this, 24) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry.v1.UpdateItemDefRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry.v1.UpdateItemDefRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.UpdateItemDefRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
itemDefId: jspb.Message.getFieldWithDefault(msg, 1, ""),
appId: jspb.Message.getFieldWithDefault(msg, 2, 0),
name: jspb.Message.getFieldWithDefault(msg, 3, ""),
description: jspb.Message.getFieldWithDefault(msg, 4, ""),
displayType: jspb.Message.getFieldWithDefault(msg, 5, ""),
bundle: jspb.Message.getFieldWithDefault(msg, 6, ""),
price: jspb.Message.getFieldWithDefault(msg, 7, ""),
iconUrl: jspb.Message.getFieldWithDefault(msg, 8, ""),
marketable: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
storeTags: jspb.Message.getFieldWithDefault(msg, 10, ""),
storeImages: jspb.Message.getFieldWithDefault(msg, 11, ""),
appFiles: jspb.Message.getFieldWithDefault(msg, 12, ""),
collection: jspb.Message.getFieldWithDefault(msg, 13, ""),
hidden: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
storeHidden: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
gameOnly: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
promo: jspb.Message.getFieldWithDefault(msg, 17, ""),
tradable: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
exchange: jspb.Message.getFieldWithDefault(msg, 19, ""),
maxSupply: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry.v1.UpdateItemDefRequest}
 */
proto.registry.v1.UpdateItemDefRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry.v1.UpdateItemDefRequest;
  return proto.registry.v1.UpdateItemDefRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry.v1.UpdateItemDefRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry.v1.UpdateItemDefRequest}
 */
proto.registry.v1.UpdateItemDefRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemDefId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAppId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBundle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrice(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconUrl(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMarketable(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreTags(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreImages(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppFiles(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHidden(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStoreHidden(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGameOnly(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromo(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTradable(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxSupply(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry.v1.UpdateItemDefRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry.v1.UpdateItemDefRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.UpdateItemDefRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemDefId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDisplayType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBundle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIconUrl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMarketable();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getStoreTags();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getStoreImages();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAppFiles();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getHidden();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getStoreHidden();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getGameOnly();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getPromo();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getTradable();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeInt64(
      20,
      f
    );
  }
};


/**
 * optional string item_def_id = 1;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getItemDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setItemDefId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 app_id = 2;
 * @return {number}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getAppId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setAppId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string display_type = 5;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getDisplayType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setDisplayType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string bundle = 6;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getBundle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setBundle = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string price = 7;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string icon_url = 8;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getIconUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setIconUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool marketable = 9;
 * @return {boolean}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getMarketable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setMarketable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string store_tags = 10;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getStoreTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setStoreTags = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string store_images = 11;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getStoreImages = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setStoreImages = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string app_files = 12;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getAppFiles = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setAppFiles = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string collection = 13;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bool hidden = 14;
 * @return {boolean}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getHidden = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setHidden = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool store_hidden = 15;
 * @return {boolean}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getStoreHidden = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setStoreHidden = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool game_only = 16;
 * @return {boolean}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getGameOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setGameOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional string promo = 17;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getPromo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setPromo = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional bool tradable = 18;
 * @return {boolean}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getTradable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setTradable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional string exchange = 19;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional int64 max_supply = 20;
 * @return {number}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.getMaxSupply = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.setMaxSupply = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.registry.v1.UpdateItemDefRequest} returns this
 */
proto.registry.v1.UpdateItemDefRequest.prototype.clearMaxSupply = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry.v1.UpdateItemDefRequest.prototype.hasMaxSupply = function() {
  return jspb.Message.getField(this, 20) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry.v1.AchievementDef.prototype.toObject = function(opt_includeInstance) {
  return proto.registry.v1.AchievementDef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry.v1.AchievementDef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.AchievementDef.toObject = function(includeInstance, msg) {
  var f, obj = {
achievementDefId: jspb.Message.getFieldWithDefault(msg, 1, ""),
appId: jspb.Message.getFieldWithDefault(msg, 2, 0),
name: jspb.Message.getFieldWithDefault(msg, 3, ""),
description: jspb.Message.getFieldWithDefault(msg, 4, ""),
iconUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
tags: jspb.Message.getFieldWithDefault(msg, 6, ""),
hidden: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
displayType: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry.v1.AchievementDef}
 */
proto.registry.v1.AchievementDef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry.v1.AchievementDef;
  return proto.registry.v1.AchievementDef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry.v1.AchievementDef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry.v1.AchievementDef}
 */
proto.registry.v1.AchievementDef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAchievementDefId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAppId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHidden(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry.v1.AchievementDef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry.v1.AchievementDef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry.v1.AchievementDef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.AchievementDef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAchievementDefId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAppId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIconUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTags();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHidden();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getDisplayType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string achievement_def_id = 1;
 * @return {string}
 */
proto.registry.v1.AchievementDef.prototype.getAchievementDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.AchievementDef} returns this
 */
proto.registry.v1.AchievementDef.prototype.setAchievementDefId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 app_id = 2;
 * @return {number}
 */
proto.registry.v1.AchievementDef.prototype.getAppId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.registry.v1.AchievementDef} returns this
 */
proto.registry.v1.AchievementDef.prototype.setAppId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.registry.v1.AchievementDef.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.AchievementDef} returns this
 */
proto.registry.v1.AchievementDef.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.registry.v1.AchievementDef.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.AchievementDef} returns this
 */
proto.registry.v1.AchievementDef.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string icon_url = 5;
 * @return {string}
 */
proto.registry.v1.AchievementDef.prototype.getIconUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.AchievementDef} returns this
 */
proto.registry.v1.AchievementDef.prototype.setIconUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string tags = 6;
 * @return {string}
 */
proto.registry.v1.AchievementDef.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.AchievementDef} returns this
 */
proto.registry.v1.AchievementDef.prototype.setTags = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool hidden = 7;
 * @return {boolean}
 */
proto.registry.v1.AchievementDef.prototype.getHidden = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.registry.v1.AchievementDef} returns this
 */
proto.registry.v1.AchievementDef.prototype.setHidden = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string display_type = 8;
 * @return {string}
 */
proto.registry.v1.AchievementDef.prototype.getDisplayType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.AchievementDef} returns this
 */
proto.registry.v1.AchievementDef.prototype.setDisplayType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry.v1.GetItemDefRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry.v1.GetItemDefRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry.v1.GetItemDefRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.GetItemDefRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
itemDefId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry.v1.GetItemDefRequest}
 */
proto.registry.v1.GetItemDefRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry.v1.GetItemDefRequest;
  return proto.registry.v1.GetItemDefRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry.v1.GetItemDefRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry.v1.GetItemDefRequest}
 */
proto.registry.v1.GetItemDefRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemDefId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry.v1.GetItemDefRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry.v1.GetItemDefRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry.v1.GetItemDefRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.GetItemDefRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemDefId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string item_def_id = 1;
 * @return {string}
 */
proto.registry.v1.GetItemDefRequest.prototype.getItemDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.GetItemDefRequest} returns this
 */
proto.registry.v1.GetItemDefRequest.prototype.setItemDefId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry.v1.CreateItemDefRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry.v1.CreateItemDefRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry.v1.CreateItemDefRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.CreateItemDefRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
itemDef: (f = msg.getItemDef()) && proto.registry.v1.ItemDef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry.v1.CreateItemDefRequest}
 */
proto.registry.v1.CreateItemDefRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry.v1.CreateItemDefRequest;
  return proto.registry.v1.CreateItemDefRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry.v1.CreateItemDefRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry.v1.CreateItemDefRequest}
 */
proto.registry.v1.CreateItemDefRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.registry.v1.ItemDef;
      reader.readMessage(value,proto.registry.v1.ItemDef.deserializeBinaryFromReader);
      msg.setItemDef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry.v1.CreateItemDefRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry.v1.CreateItemDefRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry.v1.CreateItemDefRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.CreateItemDefRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemDef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.registry.v1.ItemDef.serializeBinaryToWriter
    );
  }
};


/**
 * optional ItemDef item_def = 1;
 * @return {?proto.registry.v1.ItemDef}
 */
proto.registry.v1.CreateItemDefRequest.prototype.getItemDef = function() {
  return /** @type{?proto.registry.v1.ItemDef} */ (
    jspb.Message.getWrapperField(this, proto.registry.v1.ItemDef, 1));
};


/**
 * @param {?proto.registry.v1.ItemDef|undefined} value
 * @return {!proto.registry.v1.CreateItemDefRequest} returns this
*/
proto.registry.v1.CreateItemDefRequest.prototype.setItemDef = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry.v1.CreateItemDefRequest} returns this
 */
proto.registry.v1.CreateItemDefRequest.prototype.clearItemDef = function() {
  return this.setItemDef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry.v1.CreateItemDefRequest.prototype.hasItemDef = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry.v1.CreateItemDefResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry.v1.CreateItemDefResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry.v1.CreateItemDefResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.CreateItemDefResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry.v1.CreateItemDefResponse}
 */
proto.registry.v1.CreateItemDefResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry.v1.CreateItemDefResponse;
  return proto.registry.v1.CreateItemDefResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry.v1.CreateItemDefResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry.v1.CreateItemDefResponse}
 */
proto.registry.v1.CreateItemDefResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry.v1.CreateItemDefResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry.v1.CreateItemDefResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry.v1.CreateItemDefResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.CreateItemDefResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.registry.v1.CreateItemDefResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.CreateItemDefResponse} returns this
 */
proto.registry.v1.CreateItemDefResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry.v1.UpdateItemDefResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry.v1.UpdateItemDefResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry.v1.UpdateItemDefResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.UpdateItemDefResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry.v1.UpdateItemDefResponse}
 */
proto.registry.v1.UpdateItemDefResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry.v1.UpdateItemDefResponse;
  return proto.registry.v1.UpdateItemDefResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry.v1.UpdateItemDefResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry.v1.UpdateItemDefResponse}
 */
proto.registry.v1.UpdateItemDefResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry.v1.UpdateItemDefResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry.v1.UpdateItemDefResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry.v1.UpdateItemDefResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.UpdateItemDefResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.registry.v1.UpdateItemDefResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateItemDefResponse} returns this
 */
proto.registry.v1.UpdateItemDefResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry.v1.GetAchievementDefRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry.v1.GetAchievementDefRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry.v1.GetAchievementDefRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.GetAchievementDefRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
achievementDefId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry.v1.GetAchievementDefRequest}
 */
proto.registry.v1.GetAchievementDefRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry.v1.GetAchievementDefRequest;
  return proto.registry.v1.GetAchievementDefRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry.v1.GetAchievementDefRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry.v1.GetAchievementDefRequest}
 */
proto.registry.v1.GetAchievementDefRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAchievementDefId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry.v1.GetAchievementDefRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry.v1.GetAchievementDefRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry.v1.GetAchievementDefRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.GetAchievementDefRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAchievementDefId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string achievement_def_id = 1;
 * @return {string}
 */
proto.registry.v1.GetAchievementDefRequest.prototype.getAchievementDefId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.GetAchievementDefRequest} returns this
 */
proto.registry.v1.GetAchievementDefRequest.prototype.setAchievementDefId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry.v1.CreateAchievementDefRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry.v1.CreateAchievementDefRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry.v1.CreateAchievementDefRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.CreateAchievementDefRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
achievementDef: (f = msg.getAchievementDef()) && proto.registry.v1.AchievementDef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry.v1.CreateAchievementDefRequest}
 */
proto.registry.v1.CreateAchievementDefRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry.v1.CreateAchievementDefRequest;
  return proto.registry.v1.CreateAchievementDefRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry.v1.CreateAchievementDefRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry.v1.CreateAchievementDefRequest}
 */
proto.registry.v1.CreateAchievementDefRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.registry.v1.AchievementDef;
      reader.readMessage(value,proto.registry.v1.AchievementDef.deserializeBinaryFromReader);
      msg.setAchievementDef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry.v1.CreateAchievementDefRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry.v1.CreateAchievementDefRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry.v1.CreateAchievementDefRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.CreateAchievementDefRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAchievementDef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.registry.v1.AchievementDef.serializeBinaryToWriter
    );
  }
};


/**
 * optional AchievementDef achievement_def = 1;
 * @return {?proto.registry.v1.AchievementDef}
 */
proto.registry.v1.CreateAchievementDefRequest.prototype.getAchievementDef = function() {
  return /** @type{?proto.registry.v1.AchievementDef} */ (
    jspb.Message.getWrapperField(this, proto.registry.v1.AchievementDef, 1));
};


/**
 * @param {?proto.registry.v1.AchievementDef|undefined} value
 * @return {!proto.registry.v1.CreateAchievementDefRequest} returns this
*/
proto.registry.v1.CreateAchievementDefRequest.prototype.setAchievementDef = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry.v1.CreateAchievementDefRequest} returns this
 */
proto.registry.v1.CreateAchievementDefRequest.prototype.clearAchievementDef = function() {
  return this.setAchievementDef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry.v1.CreateAchievementDefRequest.prototype.hasAchievementDef = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry.v1.CreateAchievementDefResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry.v1.CreateAchievementDefResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry.v1.CreateAchievementDefResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.CreateAchievementDefResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry.v1.CreateAchievementDefResponse}
 */
proto.registry.v1.CreateAchievementDefResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry.v1.CreateAchievementDefResponse;
  return proto.registry.v1.CreateAchievementDefResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry.v1.CreateAchievementDefResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry.v1.CreateAchievementDefResponse}
 */
proto.registry.v1.CreateAchievementDefResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry.v1.CreateAchievementDefResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry.v1.CreateAchievementDefResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry.v1.CreateAchievementDefResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.CreateAchievementDefResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.registry.v1.CreateAchievementDefResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.CreateAchievementDefResponse} returns this
 */
proto.registry.v1.CreateAchievementDefResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry.v1.UpdateAchievementDefRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.registry.v1.UpdateAchievementDefRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry.v1.UpdateAchievementDefRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.UpdateAchievementDefRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
achievementDef: (f = msg.getAchievementDef()) && proto.registry.v1.AchievementDef.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry.v1.UpdateAchievementDefRequest}
 */
proto.registry.v1.UpdateAchievementDefRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry.v1.UpdateAchievementDefRequest;
  return proto.registry.v1.UpdateAchievementDefRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry.v1.UpdateAchievementDefRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry.v1.UpdateAchievementDefRequest}
 */
proto.registry.v1.UpdateAchievementDefRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.registry.v1.AchievementDef;
      reader.readMessage(value,proto.registry.v1.AchievementDef.deserializeBinaryFromReader);
      msg.setAchievementDef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry.v1.UpdateAchievementDefRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry.v1.UpdateAchievementDefRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry.v1.UpdateAchievementDefRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.UpdateAchievementDefRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAchievementDef();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.registry.v1.AchievementDef.serializeBinaryToWriter
    );
  }
};


/**
 * optional AchievementDef achievement_def = 1;
 * @return {?proto.registry.v1.AchievementDef}
 */
proto.registry.v1.UpdateAchievementDefRequest.prototype.getAchievementDef = function() {
  return /** @type{?proto.registry.v1.AchievementDef} */ (
    jspb.Message.getWrapperField(this, proto.registry.v1.AchievementDef, 1));
};


/**
 * @param {?proto.registry.v1.AchievementDef|undefined} value
 * @return {!proto.registry.v1.UpdateAchievementDefRequest} returns this
*/
proto.registry.v1.UpdateAchievementDefRequest.prototype.setAchievementDef = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registry.v1.UpdateAchievementDefRequest} returns this
 */
proto.registry.v1.UpdateAchievementDefRequest.prototype.clearAchievementDef = function() {
  return this.setAchievementDef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registry.v1.UpdateAchievementDefRequest.prototype.hasAchievementDef = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registry.v1.UpdateAchievementDefResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.registry.v1.UpdateAchievementDefResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registry.v1.UpdateAchievementDefResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.UpdateAchievementDefResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registry.v1.UpdateAchievementDefResponse}
 */
proto.registry.v1.UpdateAchievementDefResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registry.v1.UpdateAchievementDefResponse;
  return proto.registry.v1.UpdateAchievementDefResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registry.v1.UpdateAchievementDefResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registry.v1.UpdateAchievementDefResponse}
 */
proto.registry.v1.UpdateAchievementDefResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registry.v1.UpdateAchievementDefResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registry.v1.UpdateAchievementDefResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registry.v1.UpdateAchievementDefResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registry.v1.UpdateAchievementDefResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.registry.v1.UpdateAchievementDefResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registry.v1.UpdateAchievementDefResponse} returns this
 */
proto.registry.v1.UpdateAchievementDefResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.registry.v1);
