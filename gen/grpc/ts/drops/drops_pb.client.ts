// @generated by protobuf-ts 2.11.1 with parameter add_pb_suffix
// @generated from protobuf file "drops/drops.proto" (package "drops.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { DropsService } from "./drops_pb";
import type { WhitelistDropUserResponse } from "./drops_pb";
import type { WhitelistDropUserRequest } from "./drops_pb";
import type { CheckEligibilityResponse } from "./drops_pb";
import type { CheckEligibilityRequest } from "./drops_pb";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateDropResponse } from "./drops_pb";
import type { CreateDropRequest } from "./drops_pb";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service drops.v1.DropsService
 */
export interface IDropsServiceClient {
    /**
     * @generated from protobuf rpc: CreateDrop
     */
    createDrop(input: CreateDropRequest, options?: RpcOptions): UnaryCall<CreateDropRequest, CreateDropResponse>;
    /**
     * @generated from protobuf rpc: CheckEligibility
     */
    checkEligibility(input: CheckEligibilityRequest, options?: RpcOptions): UnaryCall<CheckEligibilityRequest, CheckEligibilityResponse>;
    /**
     * @generated from protobuf rpc: WhitelistDropUser
     */
    whitelistDropUser(input: WhitelistDropUserRequest, options?: RpcOptions): UnaryCall<WhitelistDropUserRequest, WhitelistDropUserResponse>;
}
/**
 * @generated from protobuf service drops.v1.DropsService
 */
export class DropsServiceClient implements IDropsServiceClient, ServiceInfo {
    typeName = DropsService.typeName;
    methods = DropsService.methods;
    options = DropsService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateDrop
     */
    createDrop(input: CreateDropRequest, options?: RpcOptions): UnaryCall<CreateDropRequest, CreateDropResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateDropRequest, CreateDropResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CheckEligibility
     */
    checkEligibility(input: CheckEligibilityRequest, options?: RpcOptions): UnaryCall<CheckEligibilityRequest, CheckEligibilityResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CheckEligibilityRequest, CheckEligibilityResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: WhitelistDropUser
     */
    whitelistDropUser(input: WhitelistDropUserRequest, options?: RpcOptions): UnaryCall<WhitelistDropUserRequest, WhitelistDropUserResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<WhitelistDropUserRequest, WhitelistDropUserResponse>("unary", this._transport, method, opt, input);
    }
}
