// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: squads/squads.proto

package squad

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Consumer      string                 `protobuf:"bytes,1,opt,name=consumer,proto3" json:"consumer,omitempty"`
	Limit         int64                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	AckByRequest  bool                   `protobuf:"varint,3,opt,name=ack_by_request,json=ackByRequest,proto3" json:"ack_by_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventsRequest) Reset() {
	*x = StreamEventsRequest{}
	mi := &file_squads_squads_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsRequest) ProtoMessage() {}

func (x *StreamEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_squads_squads_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamEventsRequest) Descriptor() ([]byte, []int) {
	return file_squads_squads_proto_rawDescGZIP(), []int{0}
}

func (x *StreamEventsRequest) GetConsumer() string {
	if x != nil {
		return x.Consumer
	}
	return ""
}

func (x *StreamEventsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *StreamEventsRequest) GetAckByRequest() bool {
	if x != nil {
		return x.AckByRequest
	}
	return false
}

type StreamEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	AccountId     int64                  `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	SquadId       int64                  `protobuf:"varint,3,opt,name=squad_id,json=squadId,proto3" json:"squad_id,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MessageId     string                 `protobuf:"bytes,5,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventsResponse) Reset() {
	*x = StreamEventsResponse{}
	mi := &file_squads_squads_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsResponse) ProtoMessage() {}

func (x *StreamEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_squads_squads_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsResponse.ProtoReflect.Descriptor instead.
func (*StreamEventsResponse) Descriptor() ([]byte, []int) {
	return file_squads_squads_proto_rawDescGZIP(), []int{1}
}

func (x *StreamEventsResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StreamEventsResponse) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *StreamEventsResponse) GetSquadId() int64 {
	if x != nil {
		return x.SquadId
	}
	return 0
}

func (x *StreamEventsResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamEventsResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type AddGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGroupRequest) Reset() {
	*x = AddGroupRequest{}
	mi := &file_squads_squads_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupRequest) ProtoMessage() {}

func (x *AddGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_squads_squads_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupRequest.ProtoReflect.Descriptor instead.
func (*AddGroupRequest) Descriptor() ([]byte, []int) {
	return file_squads_squads_proto_rawDescGZIP(), []int{2}
}

type AddGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGroupResponse) Reset() {
	*x = AddGroupResponse{}
	mi := &file_squads_squads_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupResponse) ProtoMessage() {}

func (x *AddGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_squads_squads_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupResponse.ProtoReflect.Descriptor instead.
func (*AddGroupResponse) Descriptor() ([]byte, []int) {
	return file_squads_squads_proto_rawDescGZIP(), []int{3}
}

func (x *AddGroupResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type StreamEventAckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []string               `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventAckRequest) Reset() {
	*x = StreamEventAckRequest{}
	mi := &file_squads_squads_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventAckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventAckRequest) ProtoMessage() {}

func (x *StreamEventAckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_squads_squads_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventAckRequest.ProtoReflect.Descriptor instead.
func (*StreamEventAckRequest) Descriptor() ([]byte, []int) {
	return file_squads_squads_proto_rawDescGZIP(), []int{4}
}

func (x *StreamEventAckRequest) GetMessages() []string {
	if x != nil {
		return x.Messages
	}
	return nil
}

type StreamEventAckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventAckResponse) Reset() {
	*x = StreamEventAckResponse{}
	mi := &file_squads_squads_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventAckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventAckResponse) ProtoMessage() {}

func (x *StreamEventAckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_squads_squads_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventAckResponse.ProtoReflect.Descriptor instead.
func (*StreamEventAckResponse) Descriptor() ([]byte, []int) {
	return file_squads_squads_proto_rawDescGZIP(), []int{5}
}

func (x *StreamEventAckResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

var File_squads_squads_proto protoreflect.FileDescriptor

const file_squads_squads_proto_rawDesc = "" +
	"\n" +
	"\x13squads/squads.proto\x12\bsquad.v1\"m\n" +
	"\x13StreamEventsRequest\x12\x1a\n" +
	"\bconsumer\x18\x01 \x01(\tR\bconsumer\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x03R\x05limit\x12$\n" +
	"\x0eack_by_request\x18\x03 \x01(\bR\fackByRequest\"\xa1\x01\n" +
	"\x14StreamEventsResponse\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\x03R\taccountId\x12\x19\n" +
	"\bsquad_id\x18\x03 \x01(\x03R\asquadId\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x1d\n" +
	"\n" +
	"message_id\x18\x05 \x01(\tR\tmessageId\"\x11\n" +
	"\x0fAddGroupRequest\"*\n" +
	"\x10AddGroupResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"3\n" +
	"\x15StreamEventAckRequest\x12\x1a\n" +
	"\bmessages\x18\x01 \x03(\tR\bmessages\"0\n" +
	"\x16StreamEventAckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status2\x81\x02\n" +
	"\rSquadsService\x12Q\n" +
	"\fStreamEvents\x12\x1d.squad.v1.StreamEventsRequest\x1a\x1e.squad.v1.StreamEventsResponse\"\x000\x01\x12C\n" +
	"\bAddGroup\x12\x19.squad.v1.AddGroupRequest\x1a\x1a.squad.v1.AddGroupResponse\"\x00\x12X\n" +
	"\x11StreamAckMessages\x12\x1f.squad.v1.StreamEventAckRequest\x1a .squad.v1.StreamEventAckResponse\"\x00B@Z>github.com/OpenBuilders/not-games-sdk-public/gen/grpc/go/squadb\x06proto3"

var (
	file_squads_squads_proto_rawDescOnce sync.Once
	file_squads_squads_proto_rawDescData []byte
)

func file_squads_squads_proto_rawDescGZIP() []byte {
	file_squads_squads_proto_rawDescOnce.Do(func() {
		file_squads_squads_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_squads_squads_proto_rawDesc), len(file_squads_squads_proto_rawDesc)))
	})
	return file_squads_squads_proto_rawDescData
}

var file_squads_squads_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_squads_squads_proto_goTypes = []any{
	(*StreamEventsRequest)(nil),    // 0: squad.v1.StreamEventsRequest
	(*StreamEventsResponse)(nil),   // 1: squad.v1.StreamEventsResponse
	(*AddGroupRequest)(nil),        // 2: squad.v1.AddGroupRequest
	(*AddGroupResponse)(nil),       // 3: squad.v1.AddGroupResponse
	(*StreamEventAckRequest)(nil),  // 4: squad.v1.StreamEventAckRequest
	(*StreamEventAckResponse)(nil), // 5: squad.v1.StreamEventAckResponse
}
var file_squads_squads_proto_depIdxs = []int32{
	0, // 0: squad.v1.SquadsService.StreamEvents:input_type -> squad.v1.StreamEventsRequest
	2, // 1: squad.v1.SquadsService.AddGroup:input_type -> squad.v1.AddGroupRequest
	4, // 2: squad.v1.SquadsService.StreamAckMessages:input_type -> squad.v1.StreamEventAckRequest
	1, // 3: squad.v1.SquadsService.StreamEvents:output_type -> squad.v1.StreamEventsResponse
	3, // 4: squad.v1.SquadsService.AddGroup:output_type -> squad.v1.AddGroupResponse
	5, // 5: squad.v1.SquadsService.StreamAckMessages:output_type -> squad.v1.StreamEventAckResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_squads_squads_proto_init() }
func file_squads_squads_proto_init() {
	if File_squads_squads_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_squads_squads_proto_rawDesc), len(file_squads_squads_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_squads_squads_proto_goTypes,
		DependencyIndexes: file_squads_squads_proto_depIdxs,
		MessageInfos:      file_squads_squads_proto_msgTypes,
	}.Build()
	File_squads_squads_proto = out.File
	file_squads_squads_proto_goTypes = nil
	file_squads_squads_proto_depIdxs = nil
}
