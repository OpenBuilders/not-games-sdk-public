/*
Swagger for Not Platform

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package not-games-sdk-public

import (
	"encoding/json"
)

// checks if the HttpAppOneResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpAppOneResponse{}

// HttpAppOneResponse struct for HttpAppOneResponse
type HttpAppOneResponse struct {
	Avatar *string `json:"avatar,omitempty"`
	Background *string `json:"background,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Slug *string `json:"slug,omitempty"`
	Socials []HttpAppSocial `json:"socials,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Verified *bool `json:"verified,omitempty"`
}

// NewHttpAppOneResponse instantiates a new HttpAppOneResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpAppOneResponse() *HttpAppOneResponse {
	this := HttpAppOneResponse{}
	return &this
}

// NewHttpAppOneResponseWithDefaults instantiates a new HttpAppOneResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpAppOneResponseWithDefaults() *HttpAppOneResponse {
	this := HttpAppOneResponse{}
	return &this
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *HttpAppOneResponse) GetAvatar() string {
	if o == nil || IsNil(o.Avatar) {
		var ret string
		return ret
	}
	return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpAppOneResponse) GetAvatarOk() (*string, bool) {
	if o == nil || IsNil(o.Avatar) {
		return nil, false
	}
	return o.Avatar, true
}

// HasAvatar returns a boolean if a field has been set.
func (o *HttpAppOneResponse) HasAvatar() bool {
	if o != nil && !IsNil(o.Avatar) {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given string and assigns it to the Avatar field.
func (o *HttpAppOneResponse) SetAvatar(v string) {
	o.Avatar = &v
}

// GetBackground returns the Background field value if set, zero value otherwise.
func (o *HttpAppOneResponse) GetBackground() string {
	if o == nil || IsNil(o.Background) {
		var ret string
		return ret
	}
	return *o.Background
}

// GetBackgroundOk returns a tuple with the Background field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpAppOneResponse) GetBackgroundOk() (*string, bool) {
	if o == nil || IsNil(o.Background) {
		return nil, false
	}
	return o.Background, true
}

// HasBackground returns a boolean if a field has been set.
func (o *HttpAppOneResponse) HasBackground() bool {
	if o != nil && !IsNil(o.Background) {
		return true
	}

	return false
}

// SetBackground gets a reference to the given string and assigns it to the Background field.
func (o *HttpAppOneResponse) SetBackground(v string) {
	o.Background = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *HttpAppOneResponse) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpAppOneResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *HttpAppOneResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *HttpAppOneResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HttpAppOneResponse) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpAppOneResponse) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HttpAppOneResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *HttpAppOneResponse) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HttpAppOneResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpAppOneResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HttpAppOneResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HttpAppOneResponse) SetName(v string) {
	o.Name = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *HttpAppOneResponse) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpAppOneResponse) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *HttpAppOneResponse) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *HttpAppOneResponse) SetSlug(v string) {
	o.Slug = &v
}

// GetSocials returns the Socials field value if set, zero value otherwise.
func (o *HttpAppOneResponse) GetSocials() []HttpAppSocial {
	if o == nil || IsNil(o.Socials) {
		var ret []HttpAppSocial
		return ret
	}
	return o.Socials
}

// GetSocialsOk returns a tuple with the Socials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpAppOneResponse) GetSocialsOk() ([]HttpAppSocial, bool) {
	if o == nil || IsNil(o.Socials) {
		return nil, false
	}
	return o.Socials, true
}

// HasSocials returns a boolean if a field has been set.
func (o *HttpAppOneResponse) HasSocials() bool {
	if o != nil && !IsNil(o.Socials) {
		return true
	}

	return false
}

// SetSocials gets a reference to the given []HttpAppSocial and assigns it to the Socials field.
func (o *HttpAppOneResponse) SetSocials(v []HttpAppSocial) {
	o.Socials = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *HttpAppOneResponse) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpAppOneResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *HttpAppOneResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *HttpAppOneResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *HttpAppOneResponse) GetVerified() bool {
	if o == nil || IsNil(o.Verified) {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpAppOneResponse) GetVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.Verified) {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *HttpAppOneResponse) HasVerified() bool {
	if o != nil && !IsNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *HttpAppOneResponse) SetVerified(v bool) {
	o.Verified = &v
}

func (o HttpAppOneResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpAppOneResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Avatar) {
		toSerialize["avatar"] = o.Avatar
	}
	if !IsNil(o.Background) {
		toSerialize["background"] = o.Background
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Socials) {
		toSerialize["socials"] = o.Socials
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	return toSerialize, nil
}

type NullableHttpAppOneResponse struct {
	value *HttpAppOneResponse
	isSet bool
}

func (v NullableHttpAppOneResponse) Get() *HttpAppOneResponse {
	return v.value
}

func (v *NullableHttpAppOneResponse) Set(val *HttpAppOneResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpAppOneResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpAppOneResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpAppOneResponse(val *HttpAppOneResponse) *NullableHttpAppOneResponse {
	return &NullableHttpAppOneResponse{value: val, isSet: true}
}

func (v NullableHttpAppOneResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpAppOneResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


