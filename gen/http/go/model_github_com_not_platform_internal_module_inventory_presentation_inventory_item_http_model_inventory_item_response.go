/*
Swagger for Not Platform

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package not-games-sdk-public

import (
	"encoding/json"
)

// checks if the GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse{}

// GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse struct for GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse
type GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse struct {
	AccountId *int32 `json:"account_id,omitempty"`
	AppFiles *string `json:"app_files,omitempty"`
	AppId *int32 `json:"app_id,omitempty"`
	AppMeta *string `json:"app_meta,omitempty"`
	Collection *string `json:"collection,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	DefaultTags *string `json:"default_tags,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayType *string `json:"display_type,omitempty"`
	GameOnly *bool `json:"game_only,omitempty"`
	Hidden *bool `json:"hidden,omitempty"`
	IconUrl *string `json:"icon_url,omitempty"`
	ItemDefId *string `json:"item_def_id,omitempty"`
	ItemId *string `json:"item_id,omitempty"`
	Marketable *bool `json:"marketable,omitempty"`
	Name *string `json:"name,omitempty"`
	Quantity *int32 `json:"quantity,omitempty"`
	Rarity *int32 `json:"rarity,omitempty"`
	Serial *int32 `json:"serial,omitempty"`
	Supply *int32 `json:"supply,omitempty"`
	Tags *string `json:"tags,omitempty"`
	Tradable *bool `json:"tradable,omitempty"`
	Type *string `json:"type,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse instantiates a new GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse() *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse {
	this := GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse{}
	return &this
}

// NewGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponseWithDefaults instantiates a new GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponseWithDefaults() *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse {
	this := GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetAccountId() int32 {
	if o == nil || IsNil(o.AccountId) {
		var ret int32
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetAccountIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int32 and assigns it to the AccountId field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetAccountId(v int32) {
	o.AccountId = &v
}

// GetAppFiles returns the AppFiles field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetAppFiles() string {
	if o == nil || IsNil(o.AppFiles) {
		var ret string
		return ret
	}
	return *o.AppFiles
}

// GetAppFilesOk returns a tuple with the AppFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetAppFilesOk() (*string, bool) {
	if o == nil || IsNil(o.AppFiles) {
		return nil, false
	}
	return o.AppFiles, true
}

// HasAppFiles returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasAppFiles() bool {
	if o != nil && !IsNil(o.AppFiles) {
		return true
	}

	return false
}

// SetAppFiles gets a reference to the given string and assigns it to the AppFiles field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetAppFiles(v string) {
	o.AppFiles = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetAppId() int32 {
	if o == nil || IsNil(o.AppId) {
		var ret int32
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetAppIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given int32 and assigns it to the AppId field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetAppId(v int32) {
	o.AppId = &v
}

// GetAppMeta returns the AppMeta field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetAppMeta() string {
	if o == nil || IsNil(o.AppMeta) {
		var ret string
		return ret
	}
	return *o.AppMeta
}

// GetAppMetaOk returns a tuple with the AppMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetAppMetaOk() (*string, bool) {
	if o == nil || IsNil(o.AppMeta) {
		return nil, false
	}
	return o.AppMeta, true
}

// HasAppMeta returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasAppMeta() bool {
	if o != nil && !IsNil(o.AppMeta) {
		return true
	}

	return false
}

// SetAppMeta gets a reference to the given string and assigns it to the AppMeta field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetAppMeta(v string) {
	o.AppMeta = &v
}

// GetCollection returns the Collection field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetCollection() string {
	if o == nil || IsNil(o.Collection) {
		var ret string
		return ret
	}
	return *o.Collection
}

// GetCollectionOk returns a tuple with the Collection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetCollectionOk() (*string, bool) {
	if o == nil || IsNil(o.Collection) {
		return nil, false
	}
	return o.Collection, true
}

// HasCollection returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasCollection() bool {
	if o != nil && !IsNil(o.Collection) {
		return true
	}

	return false
}

// SetCollection gets a reference to the given string and assigns it to the Collection field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetCollection(v string) {
	o.Collection = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDefaultTags returns the DefaultTags field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetDefaultTags() string {
	if o == nil || IsNil(o.DefaultTags) {
		var ret string
		return ret
	}
	return *o.DefaultTags
}

// GetDefaultTagsOk returns a tuple with the DefaultTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetDefaultTagsOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultTags) {
		return nil, false
	}
	return o.DefaultTags, true
}

// HasDefaultTags returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasDefaultTags() bool {
	if o != nil && !IsNil(o.DefaultTags) {
		return true
	}

	return false
}

// SetDefaultTags gets a reference to the given string and assigns it to the DefaultTags field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetDefaultTags(v string) {
	o.DefaultTags = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayType returns the DisplayType field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetDisplayType() string {
	if o == nil || IsNil(o.DisplayType) {
		var ret string
		return ret
	}
	return *o.DisplayType
}

// GetDisplayTypeOk returns a tuple with the DisplayType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetDisplayTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayType) {
		return nil, false
	}
	return o.DisplayType, true
}

// HasDisplayType returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasDisplayType() bool {
	if o != nil && !IsNil(o.DisplayType) {
		return true
	}

	return false
}

// SetDisplayType gets a reference to the given string and assigns it to the DisplayType field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetDisplayType(v string) {
	o.DisplayType = &v
}

// GetGameOnly returns the GameOnly field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetGameOnly() bool {
	if o == nil || IsNil(o.GameOnly) {
		var ret bool
		return ret
	}
	return *o.GameOnly
}

// GetGameOnlyOk returns a tuple with the GameOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetGameOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.GameOnly) {
		return nil, false
	}
	return o.GameOnly, true
}

// HasGameOnly returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasGameOnly() bool {
	if o != nil && !IsNil(o.GameOnly) {
		return true
	}

	return false
}

// SetGameOnly gets a reference to the given bool and assigns it to the GameOnly field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetGameOnly(v bool) {
	o.GameOnly = &v
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetHidden() bool {
	if o == nil || IsNil(o.Hidden) {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.Hidden) {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasHidden() bool {
	if o != nil && !IsNil(o.Hidden) {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetHidden(v bool) {
	o.Hidden = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetIconUrl() string {
	if o == nil || IsNil(o.IconUrl) {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetIconUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IconUrl) {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasIconUrl() bool {
	if o != nil && !IsNil(o.IconUrl) {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetIconUrl(v string) {
	o.IconUrl = &v
}

// GetItemDefId returns the ItemDefId field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetItemDefId() string {
	if o == nil || IsNil(o.ItemDefId) {
		var ret string
		return ret
	}
	return *o.ItemDefId
}

// GetItemDefIdOk returns a tuple with the ItemDefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetItemDefIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemDefId) {
		return nil, false
	}
	return o.ItemDefId, true
}

// HasItemDefId returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasItemDefId() bool {
	if o != nil && !IsNil(o.ItemDefId) {
		return true
	}

	return false
}

// SetItemDefId gets a reference to the given string and assigns it to the ItemDefId field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetItemDefId(v string) {
	o.ItemDefId = &v
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetItemId(v string) {
	o.ItemId = &v
}

// GetMarketable returns the Marketable field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetMarketable() bool {
	if o == nil || IsNil(o.Marketable) {
		var ret bool
		return ret
	}
	return *o.Marketable
}

// GetMarketableOk returns a tuple with the Marketable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetMarketableOk() (*bool, bool) {
	if o == nil || IsNil(o.Marketable) {
		return nil, false
	}
	return o.Marketable, true
}

// HasMarketable returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasMarketable() bool {
	if o != nil && !IsNil(o.Marketable) {
		return true
	}

	return false
}

// SetMarketable gets a reference to the given bool and assigns it to the Marketable field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetMarketable(v bool) {
	o.Marketable = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetName(v string) {
	o.Name = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetRarity returns the Rarity field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetRarity() int32 {
	if o == nil || IsNil(o.Rarity) {
		var ret int32
		return ret
	}
	return *o.Rarity
}

// GetRarityOk returns a tuple with the Rarity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetRarityOk() (*int32, bool) {
	if o == nil || IsNil(o.Rarity) {
		return nil, false
	}
	return o.Rarity, true
}

// HasRarity returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasRarity() bool {
	if o != nil && !IsNil(o.Rarity) {
		return true
	}

	return false
}

// SetRarity gets a reference to the given int32 and assigns it to the Rarity field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetRarity(v int32) {
	o.Rarity = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetSerial() int32 {
	if o == nil || IsNil(o.Serial) {
		var ret int32
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetSerialOk() (*int32, bool) {
	if o == nil || IsNil(o.Serial) {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasSerial() bool {
	if o != nil && !IsNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given int32 and assigns it to the Serial field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetSerial(v int32) {
	o.Serial = &v
}

// GetSupply returns the Supply field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetSupply() int32 {
	if o == nil || IsNil(o.Supply) {
		var ret int32
		return ret
	}
	return *o.Supply
}

// GetSupplyOk returns a tuple with the Supply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetSupplyOk() (*int32, bool) {
	if o == nil || IsNil(o.Supply) {
		return nil, false
	}
	return o.Supply, true
}

// HasSupply returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasSupply() bool {
	if o != nil && !IsNil(o.Supply) {
		return true
	}

	return false
}

// SetSupply gets a reference to the given int32 and assigns it to the Supply field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetSupply(v int32) {
	o.Supply = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetTags(v string) {
	o.Tags = &v
}

// GetTradable returns the Tradable field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetTradable() bool {
	if o == nil || IsNil(o.Tradable) {
		var ret bool
		return ret
	}
	return *o.Tradable
}

// GetTradableOk returns a tuple with the Tradable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetTradableOk() (*bool, bool) {
	if o == nil || IsNil(o.Tradable) {
		return nil, false
	}
	return o.Tradable, true
}

// HasTradable returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasTradable() bool {
	if o != nil && !IsNil(o.Tradable) {
		return true
	}

	return false
}

// SetTradable gets a reference to the given bool and assigns it to the Tradable field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetTradable(v bool) {
	o.Tradable = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.AppFiles) {
		toSerialize["app_files"] = o.AppFiles
	}
	if !IsNil(o.AppId) {
		toSerialize["app_id"] = o.AppId
	}
	if !IsNil(o.AppMeta) {
		toSerialize["app_meta"] = o.AppMeta
	}
	if !IsNil(o.Collection) {
		toSerialize["collection"] = o.Collection
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.DefaultTags) {
		toSerialize["default_tags"] = o.DefaultTags
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayType) {
		toSerialize["display_type"] = o.DisplayType
	}
	if !IsNil(o.GameOnly) {
		toSerialize["game_only"] = o.GameOnly
	}
	if !IsNil(o.Hidden) {
		toSerialize["hidden"] = o.Hidden
	}
	if !IsNil(o.IconUrl) {
		toSerialize["icon_url"] = o.IconUrl
	}
	if !IsNil(o.ItemDefId) {
		toSerialize["item_def_id"] = o.ItemDefId
	}
	if !IsNil(o.ItemId) {
		toSerialize["item_id"] = o.ItemId
	}
	if !IsNil(o.Marketable) {
		toSerialize["marketable"] = o.Marketable
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.Rarity) {
		toSerialize["rarity"] = o.Rarity
	}
	if !IsNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !IsNil(o.Supply) {
		toSerialize["supply"] = o.Supply
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Tradable) {
		toSerialize["tradable"] = o.Tradable
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse struct {
	value *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse
	isSet bool
}

func (v NullableGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) Get() *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse {
	return v.value
}

func (v *NullableGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) Set(val *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse(val *GithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) *NullableGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse {
	return &NullableGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse{value: val, isSet: true}
}

func (v NullableGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComNotPlatformInternalModuleInventoryPresentationInventoryItemHttpModelInventoryItemResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


